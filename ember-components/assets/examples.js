eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"examples/adapters/application\", \n  [\"ember\",\"ember-data\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var DS = __dependency2__[\"default\"];\n    var Adapter;\n\n    Adapter = DS.FixtureAdapter.extend();\n\n    __exports__[\"default\"] = Adapter;\n  });//# sourceURL=examples/adapters/application.js");

;eval("define(\"examples/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'examples\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'examples\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=examples/app.js");

;eval("define(\"examples/controllers/component/accordion/query-params\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var QueryParams;\n\n    QueryParams = Ember.ObjectController.extend({\n      queryParams: [\'item_idx\'],\n      item_idx: 0\n    });\n\n    __exports__[\"default\"] = QueryParams;\n  });//# sourceURL=examples/controllers/component/accordion/query-params.js");

;eval("define(\"examples/controllers/component/button/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Controller;\n\n    Controller = Ember.Controller.extend({\n      message: void 0,\n      actions: {\n        onClick: function() {\n          return this.set(\'message\', \'Clicked!\');\n        },\n        makeAsync: function(setPromise) {\n          return setPromise(new Promise(function(res, rej) {\n            return Ember.run.later(function() {\n              return res(\"YES\");\n            }, 1500);\n          }));\n        },\n        makeAsyncFailed: function(setPromise) {\n          return setPromise(new Promise(function(res, rej) {\n            return Ember.run.later(function() {\n              return rej(\"Server error...\");\n            }, 1500);\n          }));\n        }\n      }\n    });\n\n    __exports__[\"default\"] = Controller;\n  });//# sourceURL=examples/controllers/component/button/index.js");

;eval("define(\"examples/controllers/component/list/models\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Models;\n\n    Models = Ember.ArrayController.extend({\n      actions: {\n        editModelChanged: function(editItem, models) {\n          return editItem.set(\'disabled\', models.length === 1 ? void 0 : \'disabled\');\n        },\n        deleteModelChanged: function(deleteItem, models) {\n          return deleteItem.set(\'disabled\', models.length > 0 ? void 0 : \'disabled\');\n        }\n      },\n      checked: (function() {\n        return this.filterBy(\'checked\', true);\n      }).property(\'@each.checked\')\n    });\n\n    __exports__[\"default\"] = Models;\n  });//# sourceURL=examples/controllers/component/list/models.js");

;eval("define(\"examples/controllers/component/list/state\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var State;\n\n    State = Ember.ObjectController.extend({\n      message: \'Push the \"World\" button.\',\n      actions: {\n        worldSelected: function(item) {\n          return this.set(\'message\', \"\" + item.name + \" selected, now click Hello\");\n        },\n        worldDeselected: function(item) {\n          return this.set(\'message\', \"\" + item.name + \" was de-selected, now click World\");\n        },\n        helloState: function(helloItem, otherItem) {\n          if (otherItem.name === \'W\') {\n            return helloItem.set(\'disabled\', \'disabled\');\n          }\n        }\n      }\n    });\n\n    __exports__[\"default\"] = State;\n  });//# sourceURL=examples/controllers/component/list/state.js");

;eval("define(\"examples/controllers/component/modal/confirm\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Confirm;\n\n    Confirm = Ember.Controller.extend({\n      open: false,\n      close: false,\n      actions: {\n        confirm: function() {\n          alert(\"Confirmed!\");\n          return this.set(\'close\', true);\n        }\n      }\n    });\n\n    __exports__[\"default\"] = Confirm;\n  });//# sourceURL=examples/controllers/component/modal/confirm.js");

;eval("define(\"examples/controllers/component/modal/emforms\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var EmForms;\n\n    EmForms = Ember.ArrayController.extend({\n      submitting: false,\n      newUser: void 0,\n      actions: {\n        initUser: function() {\n          return this.initNew();\n        },\n        addUser: function(m, e) {\n          return e.promise = this.fakePromise(this.get(\'newUser\')).then((function(_this) {\n            return function(t) {\n              _this.set(\'model\', _this.get(\'store\').find(\'user\'));\n              return _this.initNew();\n            };\n          })(this));\n        }\n      },\n      initNew: function() {\n        return this.set(\'newUser\', this.get(\'store\').createRecord(\'user\'));\n      },\n      fakePromise: function(objToReturn) {\n        return new Promise(function(res, rej) {\n          return Ember.run.later(function() {\n            return res(objToReturn);\n          }, 1500);\n        });\n      }\n    });\n\n    __exports__[\"default\"] = EmForms;\n  });//# sourceURL=examples/controllers/component/modal/emforms.js");

;eval("define(\"examples/controllers/component/modal/forms\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Forms;\n\n    Forms = Ember.ArrayController.extend({\n      model: [\n        {\n          title: \'tag1\'\n        }, {\n          title: \'tag2\'\n        }\n      ],\n      submitting: false,\n      newTag: void 0,\n      initNewTag: (function() {\n        return this.set(\'newTag\', {});\n      }).on(\'init\'),\n      actions: {\n        addTag: function(m, e) {\n          return e.promise = this.fakePromise(this.get(\'tag\')).then((function(_this) {\n            return function(t) {\n              _this.model.addObject(_this.get(\'newTag\'));\n              return _this.initNewTag();\n            };\n          })(this));\n        }\n      },\n      fakePromise: function(objToReturn) {\n        return new Promise(function(res, rej) {\n          return Ember.run.later(function() {\n            return res(objToReturn);\n          }, 1500);\n        });\n      }\n    });\n\n    __exports__[\"default\"] = Forms;\n  });//# sourceURL=examples/controllers/component/modal/forms.js");

;eval("define(\"examples/controllers/component/modal/openifcloseif\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var OpenIfCloseIf;\n\n    OpenIfCloseIf = Ember.Controller.extend({\n      openModal: false,\n      closeModal: false,\n      message: void 0,\n      actions: {\n        raise: function() {\n          return this.set(\'openModal\', true);\n        },\n        save: function() {\n          if (this.get(\'checkMe\')) {\n            return this.set(\'closeModal\', true);\n          } else {\n            return this.set(\'message\', \'Check the checkbox first!\');\n          }\n        }\n      }\n    });\n\n    __exports__[\"default\"] = OpenIfCloseIf;\n  });//# sourceURL=examples/controllers/component/modal/openifcloseif.js");

;eval("define(\"examples/controllers/component/modal/reuse\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Reuse;\n\n    Reuse = Ember.ArrayController.extend({\n      tag: void 0,\n      actions: {\n        setTagInModal: function(toggler) {\n          return this.set(\'tag\', toggler.get(\'tag\'));\n        }\n      }\n    });\n\n    __exports__[\"default\"] = Reuse;\n  });//# sourceURL=examples/controllers/component/modal/reuse.js");

;eval("define(\"examples/controllers/component/tabs/c1\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var C1;\n\n    C1 = Ember.ObjectController.extend({\n      label: \"I\'m controller 1\"\n    });\n\n    __exports__[\"default\"] = C1;\n  });//# sourceURL=examples/controllers/component/tabs/c1.js");

;eval("define(\"examples/controllers/component/tabs/c2\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var C2;\n\n    C2 = Ember.ObjectController.extend({\n      label: \"I\'m controller 2\"\n    });\n\n    __exports__[\"default\"] = C2;\n  });//# sourceURL=examples/controllers/component/tabs/c2.js");

;eval("define(\"examples/controllers/component/tabs/query-params\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var QueryParams;\n\n    QueryParams = Ember.ObjectController.extend({\n      queryParams: [\'tab_idx\'],\n      tab_idx: 0\n    });\n\n    __exports__[\"default\"] = QueryParams;\n  });//# sourceURL=examples/controllers/component/tabs/query-params.js");

;eval("define(\"examples/controllers/component/tree/async\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var AsyncController;\n\n    AsyncController = Ember.ObjectController.extend({\n      words: [\'Foo\', \'Bar\', \'Baz\', \'Qux\'],\n      randomWord: function() {\n        return this.words[Math.floor(Math.random() * this.words.length)];\n      },\n      actions: {\n        getChildren: function(node, c) {\n          return Em.run.later(this, function() {\n            var i, o, _results;\n            c.set(\'loading\', false);\n            o = Math.floor(Math.random() * this.words.length) + 1;\n            if (node.get(\'level\') < 4) {\n              i = 0;\n              _results = [];\n              while (i < o) {\n                node.createChild({\n                  title: this.randomWord()\n                });\n                _results.push(i++);\n              }\n              return _results;\n            } else {\n              return node.emptyChildren();\n            }\n          }, 500);\n        }\n      }\n    });\n\n    __exports__[\"default\"] = AsyncController;\n  });//# sourceURL=examples/controllers/component/tree/async.js");

;eval("define(\"examples/controllers/component/tree/expand\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Expand;\n\n    Expand = Ember.Controller.extend({\n      expandDepth: 0,\n      actions: {\n        anotherLevel: function() {\n          return this.set(\'expandDepth\', this.get(\'expandDepth\') + 1);\n        }\n      }\n    });\n\n    __exports__[\"default\"] = Expand;\n  });//# sourceURL=examples/controllers/component/tree/expand.js");

;eval("define(\"examples/controllers/component/tree/hoveredactions\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Simple;\n\n    Simple = Ember.ObjectController.extend({\n      message: void 0,\n      actionsMeta: [\n        {\n          classes: [\'fa fa-eye\'],\n          action: \'eye\'\n        }, {\n          classes: [\'fa fa-edit\'],\n          action: \'edit\'\n        }, {\n          classes: [\'fa fa-trash-o\'],\n          action: \'delete\'\n        }\n      ],\n      init: function() {\n        var family, lud, suz;\n        family = Em.EC.TreeNode.create({\n          title: \'Family\'\n        });\n        suz = family.createChild({\n          title: \'Susan\'\n        });\n        lud = family.createChild({\n          title: \'Luda\'\n        });\n        return this.set(\'model\', family);\n      },\n      actions: {\n        edit: function(actionView) {\n          return this.set(\'message\', \"Editing \" + (actionView.get(\'model.title\')));\n        },\n        \"delete\": function(actionView) {\n          return this.set(\'message\', \"Deleting \" + (actionView.get(\'model.title\')));\n        },\n        eye: function(actionView) {\n          this.set(\'message\', \"Looking at \" + (actionView.get(\'model.title\')));\n          return actionView.toggleProperty(\'sticky\');\n        }\n      }\n    });\n\n    __exports__[\"default\"] = Simple;\n  });//# sourceURL=examples/controllers/component/tree/hoveredactions.js");

;eval("define(\"examples/controllers/component/tree/multiselection\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Multi;\n\n    Multi = Ember.Controller.extend({\n      multi: Ember.A(),\n      multiNames: (function() {\n        var s;\n        s = \"\";\n        this.multi.forEach(function(r) {\n          return s += \" \" + r.get(\'title\');\n        });\n        return s;\n      }).property(\'multi.length\')\n    });\n\n    __exports__[\"default\"] = Multi;\n  });//# sourceURL=examples/controllers/component/tree/multiselection.js");

;eval("define(\"examples/controllers/component/tree/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Simple;\n\n    Simple = Ember.ObjectController.extend({\n      init: function() {\n        var family, gaya, josh, lud, moses, suz, verdi;\n        family = Em.EC.TreeNode.create({\n          title: \'Family\'\n        });\n        suz = family.createChild({\n          title: \'Susan\'\n        });\n        lud = family.createChild({\n          title: \'Luda\'\n        });\n        josh = suz.createChild({\n          title: \'Josh\'\n        });\n        moses = suz.createChild({\n          title: \'Moses\'\n        });\n        verdi = lud.createChild({\n          title: \'Verdi\'\n        });\n        gaya = lud.createChild({\n          title: \'Gaya\'\n        });\n        return this.set(\'model\', family);\n      },\n      actions: {\n        expand: function() {\n          this.get(\'selected\').toggleProperty(\'expanded\');\n          return null;\n        }\n      }\n    });\n\n    __exports__[\"default\"] = Simple;\n  });//# sourceURL=examples/controllers/component/tree/simple.js");

;eval("define(\"examples/controllers/sidebar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Sidebar;\n\n    Sidebar = Ember.ArrayController.extend({\n      needs: [\'application\'],\n      model: [\n        {\n          route: \'overview\',\n          text: \'Overview\',\n          items: []\n        }, {\n          route: \'getstarted\',\n          text: \'Getting started\',\n          items: []\n        }, {\n          route: \'component\',\n          text: \'Components\',\n          items: Ember.A([\n            Ember.Object.create({\n              route: \'component.forms\',\n              text: \'Forms\',\n              items: []\n            }), Ember.Object.create({\n              route: \'component.tabs\',\n              text: \'Tabs\',\n              items: [\n                {\n                  route: \'component.tabs.simple\',\n                  text: \'Simple\'\n                }, {\n                  route: \'component.tabs.query_params\',\n                  text: \'Query Params\'\n                }, {\n                  route: \'component.tabs.controller_per_tab\',\n                  text: \'Controller per Tab\'\n                }\n              ]\n            }), Ember.Object.create({\n              route: \'component.wysiwyg\',\n              text: \'Wysiwyg Html5\',\n              items: [\n                {\n                  route: \'component.wysiwyg.simple\',\n                  text: \'Simple\'\n                }\n              ]\n            }), Ember.Object.create({\n              route: \'component.accordion\',\n              text: \'Accordion\',\n              items: [\n                {\n                  route: \'component.accordion.simple\',\n                  text: \'Simple\'\n                }, {\n                  route: \'component.accordion.query_params\',\n                  text: \'Query Params\'\n                }, {\n                  route: \'component.accordion.controller_per_item\',\n                  text: \'Controller per Item\'\n                }\n              ]\n            }), Ember.Object.create({\n              route: \'component.tree\',\n              text: \'Tree\',\n              items: [\n                {\n                  route: \'component.tree.simple\',\n                  text: \'Simple\'\n                }, {\n                  route: \'component.tree.emberdata\',\n                  text: \'Ember Data\'\n                }, {\n                  route: \'component.tree.async\',\n                  text: \'Async\'\n                }, {\n                  route: \'component.tree.hoveredactions\',\n                  text: \'Hovered Actions\'\n                }, {\n                  route: \'component.tree.expand\',\n                  text: \'Expand\'\n                }, {\n                  route: \'component.tree.multiselection\',\n                  text: \'Multi Selection\'\n                }\n              ]\n            }), Ember.Object.create({\n              route: \'component.list\',\n              text: \'List\',\n              items: [\n                {\n                  route: \'component.list.simple\',\n                  text: \'Simple\'\n                }, {\n                  route: \'component.list.state\',\n                  text: \'State\'\n                }, {\n                  route: \'component.list.models\',\n                  text: \'Models\'\n                }\n              ]\n            }), Ember.Object.create({\n              route: \'component.modal\',\n              text: \'Modal\',\n              items: [\n                {\n                  route: \'component.modal.simple\',\n                  text: \'Simple\'\n                }, {\n                  route: \'component.modal.openifcloseif\',\n                  text: \'Open If / Close If\'\n                }, {\n                  route: \'component.modal.confirm\',\n                  text: \'Confirm\'\n                }, {\n                  route: \'component.modal.reuse\',\n                  text: \'Reuse\'\n                }, {\n                  route: \'component.modal.forms\',\n                  text: \'Forms\'\n                }, {\n                  route: \'component.modal.emforms\',\n                  text: \'Ember Forms\'\n                }\n              ]\n            }), Ember.Object.create({\n              route: \'component.button\',\n              text: \'Button\',\n              items: []\n            })\n          ])\n        }\n      ],\n      pathChanged: (function() {\n        var components, path, route;\n        path = this.get(\'controllers.application.currentPath\');\n        route = path.substring(0, path.lastIndexOf(\'.\'));\n        components = this.get(\'model\').findBy(\'route\', \'component\');\n        components.items.forEach(function(c) {\n          return c.set(\'open\', false);\n        });\n        route = components.items.findBy(\'route\', route);\n        if (route) {\n          return route.set(\'open\', true);\n        }\n      }).observes(\'controllers.application.currentPath\').on(\'init\')\n    });\n\n    __exports__[\"default\"] = Sidebar;\n  });//# sourceURL=examples/controllers/sidebar.js");

;eval("define(\"examples/initializers/hightlightjs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    var Highlightjs;\n\n    Highlightjs = {\n      name: \'hightlightjs\',\n      initialize: function() {\n        return Em.Route.reopen({\n          renderTemplate: function() {\n            this._super();\n            return Em.run.next(this, function() {\n              return $(\'pre code\').each(function(i, e) {\n                return hljs.highlightBlock(e);\n              });\n            });\n          }\n        });\n      }\n    };\n\n    __exports__[\"default\"] = Highlightjs;\n  });//# sourceURL=examples/initializers/hightlightjs.js");

;eval("define(\"examples/initializers/scrolltotop\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    var ScrollTop;\n\n    ScrollTop = {\n      name: \'scroll-top\',\n      initialize: function() {\n        return Em.Route.reopen({\n          renderTemplate: function() {\n            this._super();\n            return $(\"html, body\").animate({\n              scrollTop: 0\n            }, \"fast\");\n          }\n        });\n      }\n    };\n\n    __exports__[\"default\"] = ScrollTop;\n  });//# sourceURL=examples/initializers/scrolltotop.js");

;eval("define(\"examples/models/tag\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var Tag;\n\n    Tag = DS.Model.extend({\n      title: DS.attr(\'string\'),\n      children: DS.hasMany(\'tag\', {\n        async: true\n      })\n    });\n\n    Tag.reopenClass({\n      FIXTURES: [\n        {\n          id: 1,\n          title: \'Family\',\n          parent: 0,\n          children: [10, 11]\n        }, {\n          id: 10,\n          title: \'Susan\',\n          parent: [1],\n          children: [100, 101]\n        }, {\n          id: 11,\n          title: \'Luda\',\n          parent: [1],\n          children: [102, 103]\n        }, {\n          id: 100,\n          title: \'Josh\',\n          parent: [10],\n          children: [1000]\n        }, {\n          id: 101,\n          title: \'Moses\',\n          parent: [10],\n          children: [1001]\n        }, {\n          id: 102,\n          title: \'Verdi\',\n          parent: [11],\n          children: [1002]\n        }, {\n          id: 103,\n          title: \'Gaya\',\n          parent: [11],\n          children: []\n        }, {\n          id: 1000,\n          title: \'Zuares\',\n          parent: [100],\n          children: []\n        }, {\n          id: 1001,\n          title: \'Romen\',\n          parent: [101],\n          children: []\n        }, {\n          id: 1002,\n          title: \'Flole\',\n          parent: [102],\n          children: []\n        }\n      ]\n    });\n\n    __exports__[\"default\"] = Tag;\n  });//# sourceURL=examples/models/tag.js");

;eval("define(\"examples/models/user\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var User;\n\n    User = DS.Model.extend(Ember.Validations.Mixin, {\n      name: DS.attr(\'string\'),\n      password: DS.attr(\'string\'),\n      nameHasValue: (function() {\n        var _ref;\n        return !((_ref = this.get(\'name\')) != null ? _ref.length : void 0);\n      }).property(\'name\')\n    });\n\n    User.reopen({\n      validations: {\n        name: {\n          presence: true,\n          length: {\n            minimum: 5\n          }\n        },\n        password: {\n          presence: true,\n          length: {\n            minimum: 6\n          }\n        }\n      }\n    });\n\n    User.reopenClass({\n      FIXTURES: [\n        {\n          id: 1,\n          name: \'Arek Dolv\'\n        }, {\n          id: 2,\n          name: \'Andy Genty\'\n        }\n      ]\n    });\n\n    __exports__[\"default\"] = User;\n  });//# sourceURL=examples/models/user.js");

;eval("define(\"examples/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router;\n\n    Router = Ember.Router.extend({\n      location: ExamplesENV.locationType\n    });\n\n    Router.map(function() {\n      this.route(\'overview\');\n      this.route(\'getstarted\');\n      return this.resource(\'component\', function() {\n        this.resource(\'component.forms\', function() {});\n        this.resource(\'component.tabs\', function() {\n          return this.route(\'simple\', this.route(\'query_params\', this.route(\'controller_per_tab\')));\n        });\n        this.resource(\'component.wysiwyg\', function() {\n          return this.route(\'simple\');\n        });\n        this.resource(\'component.accordion\', function() {\n          this.route(\'simple\');\n          this.route(\'query_params\');\n          return this.route(\'controller_per_item\');\n        });\n        this.resource(\'component.tree\', function() {\n          this.route(\'simple\');\n          this.route(\'emberdata\');\n          this.route(\'async\');\n          this.route(\'hoveredactions\');\n          this.route(\'expand\');\n          return this.route(\'multiselection\');\n        });\n        this.resource(\'component.list\', function() {\n          this.route(\'simple\');\n          this.route(\'state\');\n          return this.route(\'models\');\n        });\n        this.resource(\'component.modal\', function() {\n          this.route(\'simple\');\n          this.route(\'openifcloseif\');\n          this.route(\'confirm\');\n          this.route(\'reuse\');\n          this.route(\'forms\');\n          return this.route(\'emforms\');\n        });\n        return this.resource(\'component.button\', function() {});\n      });\n    });\n\n    __exports__[\"default\"] = Router;;\n  });//# sourceURL=examples/router.js");

;eval("define(\"examples/routes/component/list/models\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ModelsRoute;\n\n    ModelsRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.find(\'tag\');\n      }\n    });\n\n    __exports__[\"default\"] = ModelsRoute;\n  });//# sourceURL=examples/routes/component/list/models.js");

;eval("define(\"examples/routes/component/modal/emforms\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var EmFormsRoute;\n\n    EmFormsRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.find(\'user\');\n      }\n    });\n\n    __exports__[\"default\"] = EmFormsRoute;\n  });//# sourceURL=examples/routes/component/modal/emforms.js");

;eval("define(\"examples/routes/component/modal/reuse\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ReuseRoute;\n\n    ReuseRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.find(\'tag\');\n      }\n    });\n\n    __exports__[\"default\"] = ReuseRoute;\n  });//# sourceURL=examples/routes/component/modal/reuse.js");

;eval("define(\"examples/routes/component/tree/async\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var AsyncRoute;\n\n    AsyncRoute = Ember.Route.extend({\n      model: function() {\n        var root;\n        root = Em.EC.TreeNode.create({\n          title: \'Family\'\n        });\n        return root;\n      }\n    });\n\n    __exports__[\"default\"] = AsyncRoute;\n  });//# sourceURL=examples/routes/component/tree/async.js");

;eval("define(\"examples/routes/component/tree/emberdata\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var EmberDataRoute;\n\n    EmberDataRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.find(\'tag\', 1);\n      }\n    });\n\n    __exports__[\"default\"] = EmberDataRoute;\n  });//# sourceURL=examples/routes/component/tree/emberdata.js");

;eval("define(\"examples/routes/component/tree/expand\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ExpandRoute;\n\n    ExpandRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.find(\'tag\', 1);\n      }\n    });\n\n    __exports__[\"default\"] = ExpandRoute;\n  });//# sourceURL=examples/routes/component/tree/expand.js");

;eval("define(\"examples/routes/component/tree/multiselection\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ExpandRoute;\n\n    ExpandRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.find(\'tag\', 1);\n      }\n    });\n\n    __exports__[\"default\"] = ExpandRoute;\n  });//# sourceURL=examples/routes/component/tree/multiselection.js");

;eval("define(\"examples/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var IndexRoute;\n\n    IndexRoute = Ember.Route.extend({\n      beforeModel: function() {\n        return this.transitionTo(\'overview\');\n      }\n    });\n\n    __exports__[\"default\"] = IndexRoute;\n  });//# sourceURL=examples/routes/index.js");

;eval("define(\"examples/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar\", options) : helperMissing.call(depth0, \"render\", \"navbar\", options))));\n      data.buffer.push(\"\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3 col-xs-12\\\">\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"sidebar\", options) : helperMissing.call(depth0, \"render\", \"sidebar\", options))));\n      data.buffer.push(\"\\n        </div>\\n        <div class=\\\"col-sm-9 col-xs-12 page\\\">\\n            \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </div>\\n    </div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/application.js");

;eval("define(\"examples/templates/component/accordion/controller_per_item\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-accordion-item\'] || (depth0 && depth0[\'em-accordion-item\']),options={hash:{\n        \'title\': (\"Panel 1\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-accordion-item\'] || (depth0 && depth0[\'em-accordion-item\']),options={hash:{\n        \'title\': (\"Panel 2\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component/tabs/c1\", options) : helperMissing.call(depth0, \"render\", \"component/tabs/c1\", options))));\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component/tabs/c2\", options) : helperMissing.call(depth0, \"render\", \"component/tabs/c2\", options))));\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Controller per Accordion Item</h1>\\n\\nIf your _accordion items_ are more advanced and contains large template & logic you can have a separated\\ntemplate / controller pair per _accordion item_ by using the <i>{{render}}</i> handlebars helper.\\n<br/><br/>\\n<p><i><a href=\\\"http://emberjs.com/guides/templates/rendering-with-helpers\\\">Please check Ember {{render}} doc for more info.</a></i></p>\\n\\n<h2>Demo</h2>\\n\\n\");\n      stack1 = (helper = helpers[\'em-accordion\'] || (depth0 && depth0[\'em-accordion\']),options={hash:{\n        \'configName\': (\"bs\"),\n        \'selected-idx\': (1)\n      },hashTypes:{\'configName\': \"STRING\",\'selected-idx\': \"INTEGER\"},hashContexts:{\'configName\': depth0,\'selected-idx\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">\\n        {{#em-accordion configName=\'bs\' selected-idx=1}}\\n            {{#em-accordion-item title=\\\"Panel 1\\\"}}\\n                {{render \'component/tabs/c1\'}}\\n            {{/em-accordion-item}}\\n            {{#em-accordion-item title=\\\"Panel 2\\\"}}\\n                {{render \'component/tabs/c1\'}}\\n            {{/em-accordion-item}}\\n        {{/em-accordion}}\\n    </code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/accordion/controller_per_item.js");

;eval("define(\"examples/templates/component/accordion/query_params\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-accordion-item\'] || (depth0 && depth0[\'em-accordion-item\']),options={hash:{\n        \'title\': (\"Panel 1\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-accordion-item\'] || (depth0 && depth0[\'em-accordion-item\']),options={hash:{\n        \'title\': (\"Panel 2\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-accordion-item\'] || (depth0 && depth0[\'em-accordion-item\']),options={hash:{\n        \'title\': (\"Panel 3\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Content of panel #1\\n    \");\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Content of panel #2\\n    \");\n      }\n\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Content of panel #3\\n    \");\n      }\n\n      data.buffer.push(\"<h1>Accordiong with Query Params</h1>\\n\\nIt is possible to bound the current selected accordion item to a controller parameter (usually a query param)\\nby bindingthe <i>selected-idx</i> property on the <i>{{em-accordion}}</i> tag.\\n\\n<h2>Demo</h2>\\n\\n\");\n      stack1 = (helper = helpers[\'em-accordion\'] || (depth0 && depth0[\'em-accordion\']),options={hash:{\n        \'configName\': (\"bs\"),\n        \'selected-idx\': (\"item_idx\")\n      },hashTypes:{\'configName\': \"STRING\",\'selected-idx\': \"ID\"},hashContexts:{\'configName\': depth0,\'selected-idx\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">\\n        {{#em-accordion configName=\'bs\' selected-idx=item_idx}}\\n            {{#em-accordion-item title=\\\"Panel 1\\\"}}\\n                Content of panel #1\\n            {{/em-accordion-item}}\\n            {{#em-accordion-item title=\\\"Panel 2\\\"}}\\n                Content of panel #2\\n            {{/em-accordion-item}}\\n            {{#em-accordion-item title=\\\"Panel 3\\\"}}\\n                Content of panel #3\\n            {{/em-accordion-item}}\\n        {{/em-accordion}}\\n    </code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/accordion/query_params.js");

;eval("define(\"examples/templates/component/accordion/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-accordion-item\'] || (depth0 && depth0[\'em-accordion-item\']),options={hash:{\n        \'title\': (\"Panel 1\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-accordion-item\'] || (depth0 && depth0[\'em-accordion-item\']),options={hash:{\n        \'title\': (\"Panel 2\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-accordion-item\'] || (depth0 && depth0[\'em-accordion-item\']),options={hash:{\n        \'title\': (\"Panel 3\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Content of panel #1\\n    \");\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Content of panel #2\\n    \");\n      }\n\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Content of panel #3\\n    \");\n      }\n\n      data.buffer.push(\"<h1>Simple Accordion</h1>\\n\\nThe simplest form of the accordion component is simply laying down accordion items statically where each item has a title and a block of content.\\n\\n\\n<h2>Demo</h2>\\n\\n\");\n      stack1 = (helper = helpers[\'em-accordion\'] || (depth0 && depth0[\'em-accordion\']),options={hash:{\n        \'configName\': (\"bs\"),\n        \'selected-idx\': (1)\n      },hashTypes:{\'configName\': \"STRING\",\'selected-idx\': \"INTEGER\"},hashContexts:{\'configName\': depth0,\'selected-idx\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-accordion\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">\\n        {{#em-accordion configName=\'bs\' selected-idx=1}}\\n            {{#em-accordion-item title=\\\"Panel 1\\\"}}\\n                Content of panel #1\\n            {{/em-accordion-item}}\\n            {{#em-accordion-item title=\\\"Panel 2\\\"}}\\n                Content of panel #2\\n            {{/em-accordion-item}}\\n            {{#em-accordion-item title=\\\"Panel 3\\\"}}\\n                Content of panel #3\\n            {{/em-accordion-item}}\\n        {{/em-accordion}}\\n    </code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/accordion/simple.js");

;eval("define(\"examples/templates/component/button/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h1>Button</h1>\\n\\n<p>\\nA clickable component rendered as an html <i>button</i> tag that has a text and optionally may have an icon,\\nIt is smart enough to avoid bioplate code required to change its state when buttons execute asynchronous calls.\\n</p>\\n\\n<h4> Simplest form </h4>\\n<p>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-button\'] || (depth0 && depth0[\'em-button\']),options={hash:{\n        \'default\': (\"Click Me\")\n      },hashTypes:{\'default\': \"STRING\"},hashContexts:{\'default\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-button\", options))));\n      data.buffer.push(\"\\n</p>\\n\\n<h4> With an Icon </h4>\\n<p>\\nA button may also have an icon, if the <i>icon-classes</i> property is set on the <i>{{em-button}}</i> tag then an extra <i>&lt;i&gt;</i> tag will be rendered with the given classes.\\n</p>\\n\\n<p>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-button\'] || (depth0 && depth0[\'em-button\']),options={hash:{\n        \'icon-classes\': (\"fa fa-trash-o\"),\n        \'default\': (\"With Icon\")\n      },hashTypes:{\'icon-classes\': \"STRING\",\'default\': \"STRING\"},hashContexts:{\'icon-classes\': depth0,\'default\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-button\", options))));\n      data.buffer.push(\"\\n</p>\\n\\n<h4> Styles </h4>\\n<p>\\nYou can of course add your own classes to the button to style it differently by setting the <i>class</i> property\\n</p>\\n\\n<p>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-button\'] || (depth0 && depth0[\'em-button\']),options={hash:{\n        \'class\': (\"btn btn-danger\"),\n        \'default\': (\"Delete\")\n      },hashTypes:{\'class\': \"STRING\",\'default\': \"STRING\"},hashContexts:{\'class\': depth0,\'default\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-button\", options))));\n      data.buffer.push(\"\\n</p>\\n\\n\\n<h4> Trigger Action </h4>\\n\\n<p>\\nSimply bind an action controller to the button by setting the <i>on-click</i> property.\\n</p>\\n\\n<p>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-button\'] || (depth0 && depth0[\'em-button\']),options={hash:{\n        \'on-click\': (\"onClick\"),\n        \'default\': (\"Click Me!\")\n      },hashTypes:{\'on-click\': \"STRING\",\'default\': \"STRING\"},hashContexts:{\'on-click\': depth0,\'default\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-button\", options))));\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</p>\\n\\n<h4>Async</h4>\\n\\n<p>\\nWhen a button executes an async call (a promise), it may need to:\\n<ol>\\n    <li>Disable button to avoid concurrent calls during the execution of an async call.</li>\\n    <li><i>Optionally</i> change button\'s title and/or its icon when the async call is executing, ended successfully or rejected.</li>\\n</ol>\\n</p>\\n\\n<p>Simply bind the button to a promise and everything will happen</p>\\n\\n<p>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-button\'] || (depth0 && depth0[\'em-button\']),options={hash:{\n        \'on-click\': (\"makeAsync\"),\n        \'default\': (\"Happy Submit\"),\n        \'icon-default\': (\"fa fa-trash-o\"),\n        \'icon-executing\': (\"fa fa-spinner fa-spin\"),\n        \'icon-resolved\': (\"fa fa-check\"),\n        \'executing\': (\"Submitting\"),\n        \'resolved\': (\"Completed\"),\n        \'rejected\': (\"Failed\")\n      },hashTypes:{\'on-click\': \"STRING\",\'default\': \"STRING\",\'icon-default\': \"STRING\",\'icon-executing\': \"STRING\",\'icon-resolved\': \"STRING\",\'executing\': \"STRING\",\'resolved\': \"STRING\",\'rejected\': \"STRING\"},hashContexts:{\'on-click\': depth0,\'default\': depth0,\'icon-default\': depth0,\'icon-executing\': depth0,\'icon-resolved\': depth0,\'executing\': depth0,\'resolved\': depth0,\'rejected\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-button\", options))));\n      data.buffer.push(\"\\n</p>\\n\\n<p>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-button\'] || (depth0 && depth0[\'em-button\']),options={hash:{\n        \'on-click\': (\"makeAsyncFailed\"),\n        \'default\': (\"Sad Submit\"),\n        \'executing\': (\"Submitting\"),\n        \'resolved\': (\"Completed\"),\n        \'rejected\': (\"Failed :/\")\n      },hashTypes:{\'on-click\': \"STRING\",\'default\': \"STRING\",\'executing\': \"STRING\",\'resolved\': \"STRING\",\'rejected\': \"STRING\"},hashContexts:{\'on-click\': depth0,\'default\': depth0,\'executing\': depth0,\'resolved\': depth0,\'rejected\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-button\", options))));\n      data.buffer.push(\"\\n</p>\\n<br/><br/><br/>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/button/index.js");

;eval("define(\"examples/templates/component/forms/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<h1>Forms</h1>\\n\\n<p>\\nSince <i>forms</i> is not a single component and has a suite of elements beneath it we decided to extract it to its own project\\n</p>\\n\\n<h4>\\nVisit <a href=\\\"https://github.com/ember-addons/ember-forms\\\">Ember Forms</a> for more info\\n</h4>\");\n      \n    });\n  });//# sourceURL=examples/templates/component/forms/index.js");

;eval("define(\"examples/templates/component/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <h4 class=\\\"list-group-item-heading\\\">Forms</h4>\\n        <p class=\\\"list-group-item-text\\\">Smart, Intuitive forms for Ember.js styled with Bootstrap, Multi layouts and Validation support.</p>\\n    \");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <h4 class=\\\"list-group-item-heading\\\">Tabs</h4>\\n        <p class=\\\"list-group-item-text\\\">Multi panels defined with 1 single panel active at a time rendered as panels.</p>\\n    \");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <h4 class=\\\"list-group-item-heading\\\">Wysiwyg</h4>\\n        <p class=\\\"list-group-item-text\\\">Wysiwyg (What you see is what you get) html editor.</p>\\n    \");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <h4 class=\\\"list-group-item-heading\\\">Accordion</h4>\\n        <p class=\\\"list-group-item-text\\\">Multi panels defined with 1 single planel selected at a time rendered as an accordion.</p>\\n    \");\n      }\n\n    function program9(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <h4 class=\\\"list-group-item-heading\\\">Tree</h4>\\n        <p class=\\\"list-group-item-text\\\">Nested, hierarchial tree structure with async and cache support.</p>\\n    \");\n      }\n\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <h4 class=\\\"list-group-item-heading\\\">List</h4>\\n        <p class=\\\"list-group-item-text\\\">A list of items with selection and items states support.</p>\\n    \");\n      }\n\n    function program13(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <h4 class=\\\"list-group-item-heading\\\">Modal</h4>\\n        <p class=\\\"list-group-item-text\\\">A streamlined, but flexible, dialog prompts, with a title, body and footer.</p>\\n    \");\n      }\n\n      data.buffer.push(\"<h4>Please choose a component</h4>\\n\\n<div class=\\\"list-group\\\">\\n    \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"list-group-item\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component.forms\", options) : helperMissing.call(depth0, \"link-to\", \"component.forms\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"list-group-item\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component.tabs.simple\", options) : helperMissing.call(depth0, \"link-to\", \"component.tabs.simple\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"list-group-item\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component.wysiwyg.simple\", options) : helperMissing.call(depth0, \"link-to\", \"component.wysiwyg.simple\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"list-group-item\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component.accordion.simple\", options) : helperMissing.call(depth0, \"link-to\", \"component.accordion.simple\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"list-group-item\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component.tree.simple\", options) : helperMissing.call(depth0, \"link-to\", \"component.tree.simple\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"list-group-item\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component.list.simple\", options) : helperMissing.call(depth0, \"link-to\", \"component.list.simple\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"list-group-item\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(13, program13, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component.modal.simple\", options) : helperMissing.call(depth0, \"link-to\", \"component.modal.simple\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/index.js");

;eval("define(\"examples/templates/component/list/models\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'a\': (\"A\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'a\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'a\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'on-model-change\': (\"editModelChanged\"),\n        \'a\': (\"E\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'on-model-change\': \"STRING\",\'a\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'on-model-change\': depth0,\'a\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'on-model-change\': (\"deleteModelChanged\"),\n        \'a\': (\"D\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'on-model-change\': \"STRING\",\'a\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'on-model-change\': depth0,\'a\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"Add\");\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"Edit\");\n      }\n\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\"Delete\");\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        <tr>\\n            <td>\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"checked\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n        </tr>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>List with models</h1>\\n\\n<p>\\nThink of a scenario when there\'s a need of a toolbar of items (rendered as buttons) and a table of models beneath it with selection support,\\nnow items in the toolbar should change their state according to the model selection in the table.\\n\\nFor example an \'Edit\' button may be disabled unless there is exactly 1 selected model, or a \'Delete\' button may be enabled only when there is one or more selected items.\\n\\nIn the template, only 1 expression is needed, the content property is expected to be an array of array, where each array represents a section in the action bar and contains objects that represent a button defintion in the bar, the selectedItems property is expected to be an array of the currently selected items on a list.\\n\\nTo achieve this you need to set up two properties:\\n<ol>\\n<li>Set <i>models</i> property on the <i>{{em-list}}</i> tag and bind it to the models selection, this can be an array of models or a single model.</li>\\n<li>Set <i>on-model-change</i> property on the <i>{{em-list-item}}</i> tag and bind it to an action in the controller, the action will be invoked when the <i>models</i> (bound to the list) property changes.</li>\\n</ol>\\n\\n<h2>Demo</h2>\\n\\n<p>\\nThis demo demonstrate the following logic:\\n<ol>\\n<li><i>Add</i> button is always enabled.</li>\\n<li><i>Edit</i> button is enabled only if exactly 1 item is selected.</li>\\n<li><i>Delete</i> button is enabled only if there is 1 or more items selected items.</li>\\n</ol>\\n</p>\\n\\n<p>\\n\");\n      stack1 = (helper = helpers[\'em-list\'] || (depth0 && depth0[\'em-list\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'selectedClass\': (\"active\"),\n        \'class\': (\"btn-group\"),\n        \'models\': (\"checked\")\n      },hashTypes:{\'tagName\': \"STRING\",\'selectedClass\': \"STRING\",\'class\': \"STRING\",\'models\': \"ID\"},hashContexts:{\'tagName\': depth0,\'selectedClass\': depth0,\'class\': depth0,\'models\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</p>\\n<p>\\n<table class=\\\"table\\\" style=\\\"width: 30%\\\">\\n<tr><th width=\\\"10%\\\">Select</th><th>Title</th></tr>\\n    \");\n      stack1 = helpers.each.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</table>\\n</p>\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">{{#em-list tagName=\\\"div\\\" selectedClass=\\\"active\\\" class=\\\"btn-group\\\" models=checked}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" a=\\\"A\\\"}}Add{{/em-list-item}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" on-model-change=\\\"editModelChanged\\\" a=\\\"E\\\"}}Edit{{/em-list-item}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" on-model-change=\\\"deleteModelChanged\\\" a=\\\"D\\\"}}Delete{{/em-list-item}}\\n{{/em-list}}</code></pre>\\n</div>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"coffeescript\\\">Ember.ArrayController.extend\\n    actions:\\n        editModelChanged: (editItem, models) ->\\n            editItem.set \'disabled\', if models.length is 1 then undefined else \'disabled\'\\n        deleteModelChanged: (deleteItem, models) ->\\n            deleteItem.set \'disabled\', if models.length > 0 then undefined else \'disabled\'\\n\\n\\n    checked: (->\\n        return this.filterBy(\'checked\', true)\\n    ).property(\'@each.checked\')</code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/list/models.js");

;eval("define(\"examples/templates/component/list/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-list-item\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-list-item\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-list-item\']) { stack1 = blockHelperMissing.call(depth0, \'em-list-item\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-list-item\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-list-item\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-list-item\']) { stack1 = blockHelperMissing.call(depth0, \'em-list-item\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"Hello\");\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"World\");\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"a\"),\n        \'class\': (\"list-group-item\"),\n        \'u\': (\"HELLO\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'u\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'u\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"a\"),\n        \'class\': (\"list-group-item\"),\n        \'u\': (\"WORLD\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'u\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'u\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <p>Selected item is: \");\n      stack1 = helpers._triageMustache.call(depth0, \"s.u\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"<p>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Simple List</h1>\\n\\n<p>\\nA list is a collection of items, the default form a list is rendered as <i>&lt;ul&gt;</i> tag where each item is rendered as an <i>&lt;li&gt;</i> tag, simple isnt it? But lists are more sophisticated from the first glance, here are some of their features:\\n</p>\\n\\n<p>\\n    <ul>\\n        <li>Items can be selected.</li>\\n        <li>A selected item recieves a css class.</li>\\n        <li>The controller can bind its own property as the selected item.</li>\\n        <li>When an item is selected, all items get notified to react upon the selection.</li>\\n        <li>It\'s possible to bind a model to the list, when model changes, all items recieves the change can react.</li>\\n    </ul>\\n</p>\\n\\n<h3>Demo</h3>\\n\\n\");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h3>Markup</h3>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">{{#em-list}}\\n    {{#em-list-item}}Hello{{/em-list-item}}\\n    {{#em-list-item}}World{{/em-list-item}}\\n{{/em-list}}</code></pre>\\n</div>\\n\\n\\n<h1>Styles</h1>\\n\\n<p>\\nThe list and its items can be customized by getting rendered with different DOM tag and styels.\\n</p>\\n\\n\");\n      stack1 = (helper = helpers[\'em-list\'] || (depth0 && depth0[\'em-list\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"list-group\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n<h1>Selection</h1>\\n\\n<p>\\nA controller property can be bound as the selected item simply by binding the <i>selected</i> property of the <i>{{em-list}}</i> tag.\\n</p>\\n\\n\");\n      stack1 = (helper = helpers[\'em-list\'] || (depth0 && depth0[\'em-list\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"list-group\"),\n        \'selectedClass\': (\"active\"),\n        \'selected\': (\"s\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'selectedClass\': \"STRING\",\'selected\': \"ID\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'selectedClass\': depth0,\'selected\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"s\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h3>Markup</h3>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">{{#em-list tagName=\\\"div\\\" class=\\\"list-group\\\" selectedClass=\\\"active\\\" selected=s}}\\n    {{#em-list-item tagName=\\\"a\\\" class=\\\"list-group-item\\\" u=\\\"HELLO\\\"}}Hello{{/em-list-item}}\\n    {{#em-list-item tagName=\\\"a\\\" class=\\\"list-group-item\\\" u=\\\"WORLD\\\"}}World{{/em-list-item}}\\n{{/em-list}}\\n\\nSelected item is: {{s.u}}</code></pre></div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/list/simple.js");

;eval("define(\"examples/templates/component/list/state\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'name\': (\"Hello\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'name\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'name\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'on-select\': (\"worldSelected\"),\n        \'on-deselect\': (\"worldDeselected\"),\n        \'name\': (\"World\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'on-select\': \"STRING\",\'on-deselect\': \"STRING\",\'name\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'on-select\': depth0,\'on-deselect\': depth0,\'name\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"Hello\");\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"World\");\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'on-selection-change\': (\"helloState\"),\n        \'name\': (\"H\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'on-selection-change\': \"STRING\",\'name\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'on-selection-change\': depth0,\'name\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'name\': (\"W\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'name\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'name\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Item Selection State</h1>\\n\\n<p>\\nItems within the list can notify the controller when they are selected or deselected.\\n\\nFor every <i>{{em-list-item}}</i> tag you can optionally define two properties to recieve events:\\n</p>\\n\\n<p>\\n<table class=\\\"table\\\">\\n<tr><th>Property Name</th><th>Action Params</th><th>Details</th></tr>\\n<tr><td>on-select</td><td>item - The selected item</td><td>The action in the controller to be invoked when the item was selected.</td></tr>\\n<tr><td>on-deselect</td><td>item - The deselected item</td><td>The action in the controller to be invoked when the item selection was removed.</td></tr>\\n</table>\\n\\n<h2>Demo</h2>\\n\\n<p>\\n\");\n      stack1 = (helper = helpers[\'em-list\'] || (depth0 && depth0[\'em-list\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'selectedClass\': (\"active\"),\n        \'class\': (\"btn-group\")\n      },hashTypes:{\'tagName\': \"STRING\",\'selectedClass\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'selectedClass\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</p>\\n\\n<p>\\nMessage: \");\n      stack1 = helpers._triageMustache.call(depth0, \"message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</p>\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">{{#em-list tagName=\\\"div\\\" selectedClass=\\\"active\\\" class=\\\"btn-group\\\"}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" name=\\\"Hello\\\"}}Hello{{/em-list-item}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" on-select=\\\"worldSelected\\\" on-deselect=\\\"worldDeselected\\\" name=\\\"World\\\"}}World{{/em-list-item}}\\n{{/em-list}}</code></pre>\\n</div>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"coffeescript\\\">Ember.ObjectController.extend\\n    message: \'Push the \\\"World\\\" button.\'\\n    actions:\\n        worldSelected: (item) ->\\n            @set \'message\', \\\"#{item.name} selected, now click Hello\\\"\\n\\n        worldDeselected: (item) ->\\n            @set \'message\', \\\"#{item.name} was de-selected, now click World\\\"\\n</code></pre>\\n</div>\\n\\n\\n<h1>Item Selection State</h1>\\n<p>\\nAn item can change its state based on the selection of another item, this can happen when binding a controller property to the <i>on-selection-change</i> on the <i>{{em-list-item}}</i> tag.\\n</p>\\n\\n<h2>Demo</h2>\\n<p>\\n\");\n      stack1 = (helper = helpers[\'em-list\'] || (depth0 && depth0[\'em-list\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'selectedClass\': (\"active\"),\n        \'class\': (\"btn-group\")\n      },hashTypes:{\'tagName\': \"STRING\",\'selectedClass\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'selectedClass\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</p>\\n\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">{{#em-list tagName=\\\"div\\\" selectedClass=\\\"active\\\" class=\\\"btn-group\\\"}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" on-selection-change=\\\"helloState\\\" name=\\\"H\\\"}}Hello{{/em-list-item}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" name=\\\"W\\\"}}World{{/em-list-item}}\\n{{/em-list}}</code></pre>\\n</div>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"coffeescript\\\">Ember.ObjectController.extend\\n    message: \'Push the \\\"World\\\" button.\'\\n    actions:\\n        helloState: (helloItem, otherItem) ->\\n            if otherItem.name is \'W\'\\n                helloItem.set \'disabled\', \'disabled\'\\n</code></pre>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/list/state.js");

;eval("define(\"examples/templates/component/modal/confirm\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Delete\");\n      }\n\n      data.buffer.push(\"<h1>Confirm</h1>\\n\\n<p>\\nA confirmation modal with \'Yes\' and \'No\' buttons\\n</p>\\n<p>\\nWhen \'No\' is pressed the modal just get closed, while if the \'Yes\' button is pressed an action named <i>confirm</i> is invoked on the controller, giving the controller the opportunity to decide whether to close the modal or not.\\n</p>\\n\\n<h2>Demo</h2>\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-modal-confirm\'] || (depth0 && depth0[\'em-modal-confirm\']),options={hash:{\n        \'confirm-id\': (\"m\"),\n        \'configName\': (\"bs\"),\n        \'close-if\': (\"close\")\n      },hashTypes:{\'confirm-id\': \"STRING\",\'configName\': \"STRING\",\'close-if\': \"ID\"},hashContexts:{\'confirm-id\': depth0,\'configName\': depth0,\'close-if\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-confirm\", options))));\n      data.buffer.push(\"\\n\");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'modal-id\': (\"m\")\n      },hashTypes:{\'modal-id\': \"STRING\"},hashContexts:{\'modal-id\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h2>Markup</h2>\\n<div class=\\\"well line-example\\\"><pre><code class=\\\"handlebars\\\">{{em-modal-confirm confirm-id=\\\"m\\\" configName=\\\"bs\\\" close-if=close}}\\n&lt;!--<i>modal-id</i> is set to the value of the modal\'s <i>confirm-id</i> property--&gt;\\n{{#em-modal-toggler modal-id=\\\"m\\\"}}Delete{{/em-modal-toggler}}\\n</code></pre></div>\\n\\n<div class=\\\"well line-example\\\"><pre><code class=\\\"coffeescript\\\">Ember.Controller.extend\\n    close: false\\n    actions:\\n        confirm: ->\\n            alert \\\"Confirmed!\\\"\\n            @set \'close\', true\\n</code></pre></div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/modal/confirm.js");

;eval("define(\"examples/templates/component/modal/emforms\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Modal Forms\");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-title\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-title\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-title\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-title\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-body\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-body\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-body\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-body\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-footer\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-footer\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-footer\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-footer\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'class\': (\"close\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        <h4 class=\\\"modal-title\\\">Add User</h4>\\n    \");\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"<span aria-hidden=\\\"true\\\">&times;</span><span class=\\\"sr-only\\\">Close</span>\");\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"async\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(10, program10, data),fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            Submitting, please wait...\\n        \");\n      }\n\n    function program10(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-input\'] || (depth0 && depth0[\'em-input\']),options={hash:{\n        \'property\': (\"name\"),\n        \'label\': (\"Full Name\"),\n        \'placeholder\': (\"Enter a name...\")\n      },hashTypes:{\'property\': \"STRING\",\'label\': \"STRING\",\'placeholder\': \"STRING\"},hashContexts:{\'property\': depth0,\'label\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-input\", options))));\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-input\'] || (depth0 && depth0[\'em-input\']),options={hash:{\n        \'property\': (\"password\"),\n        \'label\': (\"Password\"),\n        \'placeholder\': (\"And password...\"),\n        \'type\': (\"password\")\n      },hashTypes:{\'property\': \"STRING\",\'label\': \"STRING\",\'placeholder\': \"STRING\",\'type\': \"STRING\"},hashContexts:{\'property\': depth0,\'label\': depth0,\'placeholder\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-input\", options))));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n    function program12(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\" \\n        \");\n      stack1 = helpers._triageMustache.call(depth0, \"em-form-submit\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n\n    function program14(depth0,data) {\n      \n      \n      data.buffer.push(\"Add User\");\n      }\n\n    function program16(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Modal with Ember-Forms</h1>\\n\\n\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component.modal.forms\", options) : helperMissing.call(depth0, \"link-to\", \"component.modal.forms\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" takes a special care of managing forms withi modals,\\nBut if you want to use <a href=\\\"https://github.com/indexiatech/ember-forms\\\">Ember Forms</a> within modals then read on.\\n\\n<h2>Demo</h2>\\n\\n\");\n      stack1 = (helper = helpers[\'em-modal-emform\'] || (depth0 && depth0[\'em-modal-emform\']),options={hash:{\n        \'configName\': (\"bs\"),\n        \'id\': (\"modalf\"),\n        \'on-submit\': (\"addUser\"),\n        \'model\': (\"newUser\"),\n        \'in-async\': (\"async\")\n      },hashTypes:{\'configName\': \"STRING\",\'id\': \"STRING\",\'on-submit\': \"STRING\",\'model\': \"ID\",\'in-async\': \"ID\"},hashContexts:{\'configName\': depth0,\'id\': depth0,\'on-submit\': depth0,\'model\': depth0,\'in-async\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-emform\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'modal-id\': (\"modalf\"),\n        \'class\': (\"btn btn-primary\"),\n        \'on-toggle\': (\"initUser\")\n      },hashTypes:{\'modal-id\': \"STRING\",\'class\': \"STRING\",\'on-toggle\': \"STRING\"},hashContexts:{\'modal-id\': depth0,\'class\': depth0,\'on-toggle\': depth0},inverse:self.noop,fn:self.program(14, program14, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h3>Users</h3>\\n<p>\\n<ul>\\n\");\n      stack1 = helpers.each.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\\n</p>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/modal/emforms.js");

;eval("define(\"examples/templates/component/modal/forms\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-title\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-title\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-title\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-title\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-body\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-body\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-body\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-body\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-footer\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-footer\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-footer\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-footer\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'class\': (\"close\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        <h4 class=\\\"modal-title\\\">Add Tag</h4>\\n    \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"<span aria-hidden=\\\"true\\\">&times;</span><span class=\\\"sr-only\\\">Close</span>\");\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"async\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            Submitting, please wait...\\n        \");\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n            <label for=\\\"title\\\">Title:</label>\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'id\': (\"title\"),\n        \'value\': (\"newTag.title\")\n      },hashTypes:{\'id\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'id\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n    function program10(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"async\")\n      },hashTypes:{\'disabled\': \"ID\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">Submit</button>\\n    \");\n      return buffer;\n      }\n\n    function program12(depth0,data) {\n      \n      \n      data.buffer.push(\"Add Tag\");\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Modal Form</h1>\\n\\n<p>\\nIt is a common need to have a form rendered within a modal, for this, use the <i>{{em-modal-body-form}}</i> tag,\\nThis tag renders a form tag within the body of the form and taking a special care of form submission, the benefits are:\\n</p>\\n\\n<p>\\n<ul>\\n    <li>When the form is submitted with a promise, the modal will wait for the promise to be fulfilled before closing the modal.</li>\\n    <li>The modal is notified during the form submission period, giving you a chance to style your modal accordingly with a \'loading...\' message\\n    or hide buttons to avoid concurrent calls.</li>\\n</ul>\\n</p>\\n\\n\\n<h2>Demo</h2>\\n\\n\");\n      stack1 = (helper = helpers[\'em-modal-form\'] || (depth0 && depth0[\'em-modal-form\']),options={hash:{\n        \'configName\': (\"bs\"),\n        \'id\': (\"modalf\"),\n        \'on-submit\': (\"addTag\"),\n        \'in-async\': (\"async\")\n      },hashTypes:{\'configName\': \"STRING\",\'id\': \"STRING\",\'on-submit\': \"STRING\",\'in-async\': \"ID\"},hashContexts:{\'configName\': depth0,\'id\': depth0,\'on-submit\': depth0,\'in-async\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-form\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'modal-id\': (\"modalf\"),\n        \'class\': (\"btn btn-primary\")\n      },hashTypes:{\'modal-id\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'modal-id\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(12, program12, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h3>Tags</h3>\\n<p>\\n<ul>\\n\");\n      stack1 = helpers.each.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\\n</p>\\n\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\"><pre><code class=\\\"handlebars\\\">{{#em-modal-form configName=\\\"bs\\\" id=\\\"modalf\\\" on-submit=\\\"addTag\\\" in-async=async}}\\n    {{#em-modal-title}}\\n        {{#em-modal-toggler class=\\\"close\\\"}}&lt;span aria-hidden=\\\"true\\\"&gt;&times;&lt;/span&gt;&lt;span class=\\\"sr-only\\\">Close&lt;/span&gt;{{/em-modal-toggler}}\\n        &lt;h4 class=\\\"modal-title\\\"&gt;Add Tag&lt;/h4&gt;\\n    {{/em-modal-title}}\\n    {{#em-modal-body}}\\n        {{#if async}}\\n            Submitting, please wait...\\n        {{else}}\\n            &lt;label for=\\\"title\\\"&gt;Title:&lt;/label&gt;\\n            {{input id=\\\"title\\\" value=newTag.title}}\\n        {{/if}}\\n    {{/em-modal-body}}\\n    {{#em-modal-footer}}\\n        &lt;button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" {{bind-attr disabled=async}}>Submit&lt;/button&gt;\\n    {{/em-modal-footer}}\\n{{/em-modal-form}}\\n\\n{{#em-modal-toggler modal-id=\\\"modalf\\\" class=\\\"btn btn-primary\\\"}}Add Tag{{/em-modal-toggler}}\\n\\n\\n\\n{{#each model}}\\n    &lt;li&gt;\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"&lt;/li&gt;\\n{{/each}}\\n</code></pre></div>\\n\\n\\n<h2>Controller</h2>\\n\\n<div class=\\\"well line-example\\\"><pre><code class=\\\"coffeescript\\\">Ember.ArrayController.extend\\n    model: [\\n        {title: \'tag1\'}\\n        {title: \'tag2\'}\\n    ]\\n    #true if the form is currently being submitted\\n    submitting: false\\n\\n    #The new tag to be added\\n    newTag: undefined\\n\\n    initNewTag: (->\\n        @set \'newTag\', {}\\n    ).on(\'init\')\\n\\n    actions:\\n        #Save the tag on the server\\n        addTag: (m, e) ->\\n            e.promise = @fakePromise(@get(\'tag\')).then((t) =>\\n                @model.addObject @get(\'newTag\')\\n                @initNewTag()\\n            )\\n\\n    fakePromise: (objToReturn) ->\\n        new Promise((res, rej) ->\\n            Ember.run.later(->\\n                res(objToReturn)\\n            , 1500)\\n        )\\n</code></pre></div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/modal/forms.js");

;eval("define(\"examples/templates/component/modal/openifcloseif\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"simple page\");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-title\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-title\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-title\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-title\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-body\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-body\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-body\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-body\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'class\': (\"close\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        <h4 class=\\\"modal-title\\\">Modal!</h4>\\n    \");\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"<span aria-hidden=\\\"true\\\">&times;</span><span class=\\\"sr-only\\\">Close</span>\");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        I got opened by a controller.\\n    \");\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-title\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-title\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-title\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-title\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-body\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-body\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-body\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-body\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"    \\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-footer\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-footer\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-footer\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-footer\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        <div>\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"checkMe\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\" Check me otherwise you cant save!</div>\\n        <div style=\\\"color: red;\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n    \");\n      return buffer;\n      }\n\n    function program12(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"save\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Save</button>\\n    \");\n      return buffer;\n      }\n\n    function program14(depth0,data) {\n      \n      \n      data.buffer.push(\"Click me!\");\n      }\n\n      data.buffer.push(\"<h1>Close if / Open If</h1>\\n\\n<p>You\'ve seen how a modal is opened/closed in the \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component.modal.simple\", options) : helperMissing.call(depth0, \"link-to\", \"component.modal.simple\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" by the <i>{{em-modal-toggler}}</i> tag, But sometimes it makes sense to programatically open or close a modal, for this, bind the <i>open-if</i> property to a controller property, once the property value is set to <i>true</i> the modal will be opened automatically.</p>\\n\\n<h2><i>open-if</i> property</h2>\\n\\n<h3>Demo</h3>\\n\\n\");\n      stack1 = (helper = helpers[\'em-modal\'] || (depth0 && depth0[\'em-modal\']),options={hash:{\n        \'configName\': (\"bs\"),\n        \'open-if\': (\"openModal\")\n      },hashTypes:{\'configName\': \"STRING\",\'open-if\': \"ID\"},hashContexts:{\'configName\': depth0,\'open-if\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"raise\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn\\\">Click Me</button>\\n\\n<h3>Markup</h3>\\n\\n<div class=\\\"well line-example\\\"><pre><code class=\\\"handlebars\\\">{{#em-modal configName=\\\"bs\\\" open-if=openModal}}\\n    {{#em-modal-title}}\\n        {{#em-modal-toggler class=\\\"close\\\"}}&lt;span aria-hidden=\\\"true\\\"&gt;&times;&lt;/span&gt;&lt;span class=\\\"sr-only\\\"&gt;Close&lt;/span&gt;{{/em-modal-toggler}}\\n        &lt;h4 class=\\\"modal-title\\\"&gt;Modal!&lt;/h4&gt;\\n    {{/em-modal-title}}\\n    {{#em-modal-body}}\\n        I got opened by a controller.\\n    {{/em-modal-body}}\\n    {{/em-modal}}\\n</code></pre></div>\\n\\n<h3>Controller</h3>\\n\\n<div class=\\\"well line-example\\\"><pre><code class=\\\"coffeescript\\\">Ember.Controller.extend\\n    openModal: false\\n    actions:\\n        raise: ->\\n            @set \'openModal\', true\\n</code></pre></div>\\n\\n<h2><i>close-if</i> property</h2>\\n\\n<h3>Demo</h3>\\n\\n\");\n      stack1 = (helper = helpers[\'em-modal\'] || (depth0 && depth0[\'em-modal\']),options={hash:{\n        \'configName\': (\"bs\"),\n        \'id\': (\"modal2\"),\n        \'close-if\': (\"closeModal\")\n      },hashTypes:{\'configName\': \"STRING\",\'id\': \"STRING\",\'close-if\': \"ID\"},hashContexts:{\'configName\': depth0,\'id\': depth0,\'close-if\': depth0},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'modal-id\': (\"modal2\"),\n        \'class\': (\"btn btn-primary\")\n      },hashTypes:{\'modal-id\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'modal-id\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(14, program14, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h3>Markup</h3>\\n\\n<div class=\\\"well line-example\\\"><pre><code class=\\\"handlebars\\\">{{#em-modal configName=\\\"bs\\\" id=\\\"modal2\\\" close-if=closeModal}}\\n    {{#em-modal-title}}\\n        {{#em-modal-toggler class=\\\"close\\\"}}&lt;span aria-hidden=\\\"true\\\"&gt;&times;&lt;/span&gt;&lt;span class=\\\"sr-only\\\"&gt;Close&lt;/span&gt;{{/em-modal-toggler}}\\n        &lt;h4 class=\\\"modal-title\\\"&gt;Modal!&lt;/h4&gt; \\n    {{/em-modal-title}}\\n    {{#em-modal-body}}\\n        &lt;div>{{input type=\'checkbox\' checked=checkMe}} Check me otherwise you cant save!&lt;/div&gt;\\n        &lt;div style=\\\"color: red;\\\"&gt;\");\n      stack1 = helpers._triageMustache.call(depth0, \"message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"&lt;/div&gt;\\n    {{/em-modal-body}}    \\n    {{#em-modal-footer}}\\n        &lt;button type=\\\"button\\\" class=\\\"btn btn-primary\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"save\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Save&lt;/button&gt;\\n    {{/em-modal-footer}}\\n{{/em-modal}}\\n\\n{{#em-modal-toggler modal-id=\\\"modal2\\\" class=\\\"btn btn-primary\\\"}}Click me!{{/em-modal-toggler}}\\n</code></pre></div>\\n\\n<h3>Controller</h3>\\n\\n<div class=\\\"well line-example\\\"><pre><code class=\\\"coffeescript\\\">Ember.Controller.extend\\n    closeModal: false\\n    message: undefined\\n    actions:\\n        save: ->\\n            if @get(\'checkMe\') then @set(\'closeModal\', true) else @set(\'message\', \'Check the checkbox first!\')\\n</code></pre></div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/modal/openifcloseif.js");

;eval("define(\"examples/templates/component/modal/reuse\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    \");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-list-item\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-list-item\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-list-item\']) { stack1 = blockHelperMissing.call(depth0, \'em-list-item\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            \");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'modal-id\': (\"edit-modal\"),\n        \'on-toggle\': (\"setTagInModal\"),\n        \'tag\': (\"\")\n      },hashTypes:{\'modal-id\': \"STRING\",\'on-toggle\': \"STRING\",\'tag\': \"ID\"},hashContexts:{\'modal-id\': depth0,\'on-toggle\': depth0,\'tag\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"rename\");\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-title\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-title\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-title\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-title\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-body\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-body\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-body\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-body\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"<h4>Rename Tag</h4>\");\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"tag.title\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-toggler\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-toggler\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-toggler\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-toggler\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      \n      data.buffer.push(\"Done\");\n      }\n\n      data.buffer.push(\"<h1>Reuse a Modal</h1>\\n\\nA modal can be re-used more than once for different data,\\n\\nA common need for this is when having a table of models and an action (such as <i>edit</i>) that needs a form for the specific selected model.\\n\\n<h2>Demo</h2>\\n\\n\");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = (helper = helpers[\'em-modal\'] || (depth0 && depth0[\'em-modal\']),options={hash:{\n        \'configName\': (\"bs\"),\n        \'id\': (\"edit-modal\")\n      },hashTypes:{\'configName\': \"STRING\",\'id\': \"STRING\"},hashContexts:{\'configName\': depth0,\'id\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h2> Markup </h2>\\n<div class=\\\"well line-example\\\"><pre><code class=\\\"handlebars\\\">{{#em-list}}\\n    {{#each}}\\n        {{#em-list-item}}\\n            {{title}}\\n            &lt;!--<i>on-toggle</i>will trigger the <i>setTagInModal</i> action on the controller when the toggler is clicked--&gt;\\n            {{#em-modal-toggler modal-id=\\\"edit-modal\\\" on-toggle=\\\"setTagInModal\\\" tag=this}}rename{{/em-modal-toggler}}\\n        {{/em-list-item}}\\n    {{/each}}\\n{{/em-list}}\\n\\n{{#em-modal configName=\\\"bs\\\" id=\\\"edit-modal\\\"}}\\n    {{#em-modal-title}}&lt;h4&gt;Rename Tag&lt;/h4&gt;{{/em-modal-title}}\\n    {{#em-modal-body}}\\n    {{input value=tag.title}}\\n    {{#em-modal-toggler}}Done{{/em-modal-toggler}}\\n    {{/em-modal-body}}\\n{{/em-modal}}\\n</code></pre></div>\\n\\n<h2> Controller </h2>\\n<div class=\\\"well line-example\\\"><pre><code class=\\\"coffee\\\">Ember.ArrayController.extend\\n    #The tag being edited\\n    tag: undefined\\n\\n    actions:\\n        setTagInModal: (toggler) ->\\n            #Get the tag from the toggler and set it as a member of this controller\\n            @set \'tag\', toggler.get(\'tag\')\\n</code></pre></div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/modal/reuse.js");

;eval("define(\"examples/templates/component/modal/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-title\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-title\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-title\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-title\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-body\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-body\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-body\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-body\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-modal-footer\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-modal-footer\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-modal-footer\']) { stack1 = blockHelperMissing.call(depth0, \'em-modal-footer\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'class\': (\"close\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        <h4 class=\\\"modal-title\\\">I\'m a modal title</h4>\\n    \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"<span aria-hidden=\\\"true\\\">&times;</span><span class=\\\"sr-only\\\">Close</span>\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        One fine body…\\n    \");\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'class\': (\"btn btn-default\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(8, program8, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save</button>\\n    \");\n      return buffer;\n      }\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"Close\");\n      }\n\n    function program10(depth0,data) {\n      \n      \n      data.buffer.push(\"Click me!\");\n      }\n\n      data.buffer.push(\"<h1>Simple Modal</h1>\\n\\n<p>\\nA streamlined, but flexible, dialog prompts, with a title, body and footer, the simplest form of a modal is consisted of:\\n<ol>\\n<li>The modal content itself, including its title and buttons, defined by the <i>{{em-modal}}</i> tag\\n<li>A modal toggler, defined by the <i>{{em-modal-toggler}}</i> tag which is responsible for opening/closing the modal and can be rendered as any tag (such as button or a div).\\n<li>An <i>optional</i> <i>{{em-modal-toggler}}</i> within the modal to close the modal</li>\\n</ol>\\n</p>\\n\\n<h3>Demo</h3>\\n\\n\");\n      stack1 = (helper = helpers[\'em-modal\'] || (depth0 && depth0[\'em-modal\']),options={hash:{\n        \'configName\': (\"bs\"),\n        \'id\': (\"modal1\")\n      },hashTypes:{\'configName\': \"STRING\",\'id\': \"STRING\"},hashContexts:{\'configName\': depth0,\'id\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = (helper = helpers[\'em-modal-toggler\'] || (depth0 && depth0[\'em-modal-toggler\']),options={hash:{\n        \'modal-id\': (\"modal1\"),\n        \'class\': (\"btn btn-primary\")\n      },hashTypes:{\'modal-id\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'modal-id\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-modal-toggler\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h3>Markup</h3>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">    &lt;!--id is important, so we can reference it on the toggler component--&gt;\\n    {{#em-modal configName=\\\"bs\\\" id=\\\"modal1\\\"}}\\n    {{#em-modal-title}}\\n        &lt;!--optional toggler to close the opened modal--&gt;\\n        {{#em-modal-toggler class=\\\"close\\\"}}<span aria-hidden=\\\"true\\\">&times;</span><span class=\\\"sr-only\\\">Close</span>{{/em-modal-toggler}}\\n        &lt;h4 class=\\\"modal-title\\\"&gt;I\'m a modal title&lt;/h4&gt;\\n    {{/em-modal-title}}\\n    &lt;!--the content of the modal...--&gt;\\n    {{#em-modal-body}}\\n        One fine body…\\n    {{/em-modal-body}}\\n    &lt;!--optional footer section of the modal, usually contains buttons--&gt;\\n    {{#em-modal-footer}}\\n        {{#em-modal-toggler class=\\\"btn btn-default\\\"}}Close{{/em-modal-toggler}}\\n            &lt;button type=\\\"button\\\" class=\\\"btn btn-primary\\\"&gt;Save&lt;/button&gt;\\n        {{/em-modal-footer}}\\n{{/em-modal}}\\n\\n&lt;!--the toggler to open the modal when clicked, <i>modal-id</i> property must reference the modal\'s id--&gt;\\n{{#em-modal-toggler modal-id=\\\"modal1\\\" class=\\\"btn btn-primary\\\"}}Click me!{{/em-modal-toggler}}</code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/modal/simple.js");

;eval("define(\"examples/templates/component/tabs/c1\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"controller.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      \n    });\n  });//# sourceURL=examples/templates/component/tabs/c1.js");

;eval("define(\"examples/templates/component/tabs/c2\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"controller.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tabs/c2.js");

;eval("define(\"examples/templates/component/tabs/c3\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"controller.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tabs/c3.js");

;eval("define(\"examples/templates/component/tabs/controller_per_tab\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Foo\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Bar\");\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component/tabs/c1\", options) : helperMissing.call(depth0, \"render\", \"component/tabs/c1\", options))));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component/tabs/c2\", options) : helperMissing.call(depth0, \"render\", \"component/tabs/c2\", options))));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Controller per Tab</h1>\\n\\nIf your tabs are more advanced and contains large template & logic you can have a separated\\ntemplate / controller pair per tab by using the <i>{{render}}</i> handlebars helper.\\n<br/><br/>\\n<p><i><a href=\\\"http://emberjs.com/guides/templates/rendering-with-helpers\\\">Please check Ember\'s {{render}}\\ndoc for more info.</a></i></p>\\n\\n<h2>Demo</h2>\\n<div class=\\\"line-example\\\">\\n    \");\n      stack1 = (helper = helpers[\'em-tabs\'] || (depth0 && depth0[\'em-tabs\']),options={hash:{\n        \'configName\': (\"classic\")\n      },hashTypes:{\'configName\': \"STRING\"},hashContexts:{\'configName\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tabs\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\\n<hr/>\\n<h2>Template</h2>\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">\\n                {{#em-tabs}}\\n                    {{#em-tab-list}}\\n                        {{#em-tab}}Foo{{/em-tab}}\\n                        {{#em-tab}}Bar{{/em-tab}}\\n                        {{#em-tab}}Baz{{/em-tab}}\\n                    {{/em-tab-list}}\\n                    {{#em-tab-panel}}\\n                        {{render \'component/tabs/c1\'}}\\n                    {{/em-tab-panel}}\\n                    {{#em-tab-panel}}\\n                        {{render \'component/tabs/c1\'}}\\n                    {{/em-tab-panel}}\\n                {{/em-tabs}}\\n    </code></pre>\\n</div>\\n\\n<h2>Controllers</h2>\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"coffee\\\">\\n    App.ComponentTabsC1Controller = Em.Controller.extend\\n        label: \\\"I\'m controller 1\\\"\\n\\n    App.ComponentTabsC2Controller = Em.Controller.extend\\n        label: \\\"I\'m controller 2\\\"\\n    </code></pre>\\n</div>\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tabs/controller_per_tab.js");

;eval("define(\"examples/templates/component/tabs/query_params\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Foo\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Bar\");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"Baz\");\n      }\n\n    function program9(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            <p>Foo Content</p>\\n        \");\n      }\n\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            <p>Bar Content</p>\\n        \");\n      }\n\n    function program13(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            <p>Baz Content</p>\\n        \");\n      }\n\n      data.buffer.push(\"<h1>Tabs with Query Params</h1>\\n\\nIt is possible to bound the current selected tab to a controller parameter (usually a query param)\\nby bindingthe <i>selected-idx</i> property on the <i>{{em-tabs}}</i> tag.\\n\\n<h2>Demo</h2>\\n<div class=\\\"line-example\\\">\\n    \");\n      stack1 = (helper = helpers[\'em-tabs\'] || (depth0 && depth0[\'em-tabs\']),options={hash:{\n        \'selected-idx\': (\"tab_idx\"),\n        \'configName\': (\"classic\")\n      },hashTypes:{\'selected-idx\': \"ID\",\'configName\': \"STRING\"},hashContexts:{\'selected-idx\': depth0,\'configName\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tabs\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\\n<hr/>\\n<h2>Template</h2>\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">\\n                {{#em-tabs selected-idx=tab_idx}}\\n                    {{#em-tab-list}}\\n                        {{#em-tab}}Foo{{/em-tab}}\\n                        {{#em-tab}}Bar{{/em-tab}}\\n                        {{#em-tab}}Baz{{/em-tab}}\\n                    {{/em-tab-list}}\\n                    {{#em-tab-panel}}\\n                        &lt;p>Foo Content&lt;/p>\\n                    {{/em-tab-panel}}\\n                    {{#em-tab-panel}}\\n                    &lt;p>Bar Content&lt;/p>\\n                        {{/em-tab-panel}}\\n                    {{#em-tab-panel}}\\n                    &lt;p>Baz Content&lt;/p>\\n                    {{/em-tab-panel}}\\n                {{/em-tabs}}\\n    </code></pre>\\n</div>\\n\\n<h2>Controller</h2>\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"coffee\\\">\\n       App.ComponentTabsQueryParamsController = Em.Controller.extend\\n            queryParams: [\'tab_idx\']\\n            tab_idx: 0\\n    </code></pre>\\n</div>\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tabs/query_params.js");

;eval("define(\"examples/templates/component/tabs/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(22, program22, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(22, program22, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(31, program31, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(31, program31, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Classic\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Bootstrap\");\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        <p>\\n        <div class=\\\"line-example\\\">\\n            \");\n      stack1 = (helper = helpers[\'em-tabs\'] || (depth0 && depth0[\'em-tabs\']),options={hash:{\n        \'configName\': (\"classic\")\n      },hashTypes:{\'configName\': \"STRING\"},hashContexts:{\'configName\': depth0},inverse:self.noop,fn:self.program(8, program8, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tabs\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </div>\\n        </p>\\n    \");\n      return buffer;\n      }\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      return buffer;\n      }\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                \");\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      \n      data.buffer.push(\"Foo\");\n      }\n\n    function program12(depth0,data) {\n      \n      \n      data.buffer.push(\"Bar\");\n      }\n\n    function program14(depth0,data) {\n      \n      \n      data.buffer.push(\"Baz\");\n      }\n\n    function program16(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n                    <p>Foo Content</p>\\n                \");\n      }\n\n    function program18(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n                    <p>Bar Content</p>\\n                \");\n      }\n\n    function program20(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n                    <p>Baz Content</p>\\n                \");\n      }\n\n    function program22(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        <p>\\n        <div class=\\\"line-example\\\">\\n            \");\n      stack1 = (helper = helpers[\'em-tabs\'] || (depth0 && depth0[\'em-tabs\']),options={hash:{\n        \'configName\': (\"bs\")\n      },hashTypes:{\'configName\': \"STRING\"},hashContexts:{\'configName\': depth0},inverse:self.noop,fn:self.program(23, program23, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tabs\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </div>\\n\\n        </p>\\n    \");\n      return buffer;\n      }\n    function program23(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(24, program24, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(24, program24, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      return buffer;\n      }\n    function program24(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(25, program25, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(25, program25, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(27, program27, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(27, program27, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(29, program29, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(29, program29, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                \");\n      return buffer;\n      }\n    function program25(depth0,data) {\n      \n      \n      data.buffer.push(\"<a href=\\\"javascript:void(0)\\\">Foo</a>\");\n      }\n\n    function program27(depth0,data) {\n      \n      \n      data.buffer.push(\"<a href=\\\"javascript:void(0)\\\">Bar</a>\");\n      }\n\n    function program29(depth0,data) {\n      \n      \n      data.buffer.push(\"<a href=\\\"javascript:void(0)\\\">Baz</a>\");\n      }\n\n    function program31(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'em-tabs\'] || (depth0 && depth0[\'em-tabs\']),options={hash:{\n        \'configName\': (\"foundation\")\n      },hashTypes:{\'configName\': \"STRING\"},hashContexts:{\'configName\': depth0},inverse:self.noop,fn:self.program(32, program32, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tabs\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program32(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(33, program33, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(33, program33, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(35, program35, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(35, program35, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(37, program37, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(37, program37, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(39, program39, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(39, program39, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n    function program33(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(25, program25, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(25, program25, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(27, program27, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(27, program27, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(29, program29, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(29, program29, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      return buffer;\n      }\n\n    function program35(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n                <p>Foo Content</p>\\n            \");\n      }\n\n    function program37(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n                <p>Bar Content</p>\\n            \");\n      }\n\n    function program39(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n                <p>Baz Content</p>\\n            \");\n      }\n\n      data.buffer.push(\"<h1>Simple Tabs</h1>\\n\\nThe simplest form of the tabs component is simply laying down tabs and their panes on the same template.\\n\\n\\n<h2>Demo</h2>\\n\\n\");\n      stack1 = (helper = helpers[\'em-tabs\'] || (depth0 && depth0[\'em-tabs\']),options={hash:{\n        \'configName\': (\"classic\")\n      },hashTypes:{\'configName\': \"STRING\"},hashContexts:{\'configName\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tabs\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n                <pre><code class=\\\"handlebars\\\">\\n                {{#em-tabs}}\\n                    {{#em-tab-list}}\\n                        {{#em-tab}}Foo{{/em-tab}}\\n                        {{#em-tab}}Bar{{/em-tab}}\\n                        {{#em-tab}}Baz{{/em-tab}}\\n                    {{/em-tab-list}}\\n                    {{#em-tab-panel}}\\n                        &lt;p>Foo Content&lt;/p>\\n                    {{/em-tab-panel}}\\n                    {{#em-tab-panel}}\\n                        &lt;p>Bar Content&lt;/p>\\n                    {{/em-tab-panel}}\\n                    {{#em-tab-panel}}\\n                        &lt;p>Baz Content&lt;/p>\\n                    {{/em-tab-panel}}\\n                {{/em-tabs}}\\n                </code></pre>\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tabs/simple.js");

;eval("define(\"examples/templates/component/tree/async\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h1>Async Tree</h1>\\n\\n<p>\\nThis is the most custom form of loading tree children, it only requires the root node to be built ahead,\\nExpanding a node by clicking it causes an action to be triggered on the controller, expecting the action to build or load the expanded node\'s children, the tree node will expands with the given children.\\n<p>\\n\\n<p>\\nThe data then is cached, that means if the user close the node after openning it and then re-open the node, the data will <i>not</i> be re-loaded asynchronously.\\n</p>\\n\\n<h2>Demo</h2>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-tree\'] || (depth0 && depth0[\'em-tree\']),options={hash:{\n        \'model\': (\"model\"),\n        \'async\': (true)\n      },hashTypes:{\'model\': \"ID\",\'async\': \"BOOLEAN\"},hashContexts:{\'model\': depth0,\'async\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tree\", options))));\n      data.buffer.push(\"\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"handlebars\\\">{{em-tree model=model async=true}}</code></pre>\\n</div>\\n\\n<h2>Code</h2>\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"coffeescript\\\">App.ComponentTreeAsyncController = Em.ObjectController.extend\\n    words: [\'Foo\', \'Bar\', \'Baz\', \'Qux\']\\n\\n    randomWord: ->\\n        @words[Math.floor(Math.random()*@words.length)]\\n\\n    actions:\\n        #This method is invoked by the tree, expecting the children to get back\\n        getChildren: (node, tree) ->\\n            Em.run.later(@, ->\\n                #Let the tree know we finished loading the data\\n                tree.set \'loading\', false\\n                #In reality the data would be loaded from a server via a direct ajax request or using ember-data\\n                o = Math.floor(Math.random()*@words.length)+1\\n                if node.get(\'level\') < 4\\n                    i = 0\\n                    while i < o\\n                        #This is the way to add new children to the expanded node\\n                        node.createChild(title: @randomWord())\\n                        i++\\n                else\\n                    #Call emptyChildren() if there\'s no children at all to render an appropriate icon\\n                    node.emptyChildren()\\n            , 500)\\n</code></pre>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tree/async.js");

;eval("define(\"examples/templates/component/tree/emberdata\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Async Tree\");\n      }\n\n      data.buffer.push(\"<h1>Tree with Ember Data</h1>\\n\\nIt is possible to render a tree from ember data models as long as your model has:\\n<p>\\n<ul>\\n<li><i>children</i> property defined as an <i>hasMany</i> relationship to be rendered as the children of the tree node</li>\\n<li><i>title</i> property defined a string to be the node\'s title</li>\\n</ul>\\n</p>\\n\\n<p>\\nPlease note that for every visibile node its children will be loaded from the server even if the node is not opened,\\nThis is because <i>get(\'children\')</i> is invoked for every node on the tree in order to render its icon appropriately.\\nIf you want a more sophisiticated solution with async support with more control of how children are loaded then look at the \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component.tree.async\", options) : helperMissing.call(depth0, \"link-to\", \"component.tree.async\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" approach.\\n</p>\\n\\n<h2>Demo</h2>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-tree\'] || (depth0 && depth0[\'em-tree\']),options={hash:{\n        \'model\': (\"model\"),\n        \'selected\': (\"current\")\n      },hashTypes:{\'model\': \"ID\",\'selected\': \"ID\"},hashContexts:{\'model\': depth0,\'selected\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tree\", options))));\n      data.buffer.push(\"\\nSelected: \");\n      stack1 = helpers._triageMustache.call(depth0, \"current\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"handlebars\\\">{{em-tree model=model}}</code></pre>\\n</div>\\n\\n<h2>Code</h2>\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"coffeescript\\\">#in reality replaced with a real adapter \\nApp.Tag.FIXTURES = [\\n    {id: 1, title: \'Family\', parent: 0, children: [10, 11]}\\n    {id: 10, title: \'Susan\', parent: [1], children: [100, 101]}\\n    {id: 11, title: \'Luda\', parent: [1], children: [102, 103]}\\n    {id: 100, title: \'Josh\', parent: [10], children: []}\\n    {id: 101, title: \'Moses\', parent: [10], children: []}\\n    {id: 102, title: \'Verdi\', parent: [11], children: []}\\n    {id: 103, title: \'Gaya\', parent: [11], children: []}\\n]\\n\\nApp.Tag = DS.Model.extend\\n    title: DS.attr \'string\'\\n    children: DS.hasMany(\'tag\', {async: true})\\n    parent: DS.belongsTo(\'tag\', {async: true})\\n\\nApp.ComponentTreeEmberdataRoute = Em.Route.extend\\n    model: ->\\n        @store.find(\'tag\', 1)\\n</code></pre>\\n</div>\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-tree-branch\'] || (depth0 && depth0[\'em-tree-branch\']),options={hash:{\n        \'node\': (\"model\")\n      },hashTypes:{\'node\': \"ID\"},hashContexts:{\'node\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tree-branch\", options))));\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tree/emberdata.js");

;eval("define(\"examples/templates/component/tree/expand\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h1>Expanded Tree</h1>\\nIt is possible to auto expand the tree by using the <i>expand-depth</i> property on the {{em-tree}} tag, the value of the property should be the max depth level to expand\\n\\n<h2>Demo</h2>\\n<p>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-tree\'] || (depth0 && depth0[\'em-tree\']),options={hash:{\n        \'model\': (\"model\"),\n        \'selected\': (\"current\"),\n        \'expand-depth\': (99)\n      },hashTypes:{\'model\': \"ID\",\'selected\': \"ID\",\'expand-depth\': \"INTEGER\"},hashContexts:{\'model\': depth0,\'selected\': depth0,\'expand-depth\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tree\", options))));\n      data.buffer.push(\"\\n<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"anotherLevel\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Expand Level \");\n      stack1 = helpers._triageMustache.call(depth0, \"controller.expandDepth\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</button>\\n</p>\\n\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"handlebars\\\">{{em-tree model=model selected=current expand-depth=expandDepth}}\\n</code></pre>\\n</div>\\n\\n<h2>Code</h2>\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"coffeescript\\\">Ember.Controller.extend\\n    expandDepth: 0\\n    actions:\\n        anotherLevel: ->\\n            @set \'expandDepth\', @get(\'expandDepth\')+1\\n</code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tree/expand.js");

;eval("define(\"examples/templates/component/tree/hoveredactions\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h1>Hovered Icon Actions</h1>\\n\\n<p>\\n<i>Hovered Icon Actions</i> are small icons rendered on the right side of each node when the node is hovered with the mouse, when an icon is clicked, an action on the controller is triggered.\\n</p>\\n\\n<p>\\n    <ul>\\n        <li>To define actions, pass an array of actions metadata to the <i>{{em-tree}}</i> component as <i>hovered-actions</i> property.</li>\\n        <li>Actions can be sticky if the action\'s metadata <i>sticky</i> property is set to <i>true</i>, a sticky action won\'t disappear when the node is not hovered.</li>\\n    </ul>\\n</p>\\n<h2>Demo</h2>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-tree\'] || (depth0 && depth0[\'em-tree\']),options={hash:{\n        \'model\': (\"model\"),\n        \'hovered-actions\': (\"actionsMeta\")\n      },hashTypes:{\'model\': \"ID\",\'hovered-actions\': \"ID\"},hashContexts:{\'model\': depth0,\'hovered-actions\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tree\", options))));\n      data.buffer.push(\"\\n\\nMessage from action: \");\n      stack1 = helpers._triageMustache.call(depth0, \"message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"handlebars\\\">{{em-tree model=model hovered-actions=actionsMeta}}</code></pre>\\n</div>\\n\\n<h2>Code</h2>\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"coffeescript\\\">Ember.ObjectController.extend\\n    message: undefined\\n    actionsMeta: [\\n        {classes: [\'fa fa-eye\'], action: \'eye\'}\\n        {classes: [\'fa fa-edit\'], action: \'edit\'}\\n        {classes: [\'fa fa-trash-o\'], action: \'delete\'}\\n    ]\\n    init: ->\\n        #TODO: Import EC instead\\n        family = Em.EC.TreeNode.create({title: \'Family\'})\\n        #1st level\\n        suz = family.createChild {title: \'Susan\'}\\n        lud = family.createChild {title: \'Luda\'}\\n\\n        @set \'model\', family\\n\\n    actions: \\n        edit: (actionView) ->\\n            @set \'message\', \\\"Editing #{actionView.get(\'model.title\')}\\\"\\n        delete: (actionView) ->\\n            @set \'message\', \\\"Deleting #{actionView.get(\'model.title\')}\\\"\\n        eye: (actionView) ->\\n            @set \'message\', \\\"Looking at #{actionView.get(\'model.title\')}\\\"\\n            actionView.toggleProperty \'sticky\'\\n</code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tree/hoveredactions.js");

;eval("define(\"examples/templates/component/tree/multiselection\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h1>Tree with Multi Selection</h1>\\n\\n<p>\\nThe default selection (when clicking on the Tree\'s title) is one node selection only,\\n\\nTree supports multi selection by setting the <i>multi-selection</i> property on the {{em-tree}} tag to true, this mode will render a checkbox near every node in the tree, letting the user select or de-select every node.\\n</p>\\n\\n<h2>Demo</h2>\\n<p>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-tree\'] || (depth0 && depth0[\'em-tree\']),options={hash:{\n        \'model\': (\"model\"),\n        \'selected\': (\"current\"),\n        \'expand-depth\': (\"expandDepth\"),\n        \'in-multi-selection\': (true),\n        \'multi-selection\': (\"multi\")\n      },hashTypes:{\'model\': \"ID\",\'selected\': \"ID\",\'expand-depth\': \"ID\",\'in-multi-selection\': \"BOOLEAN\",\'multi-selection\': \"ID\"},hashContexts:{\'model\': depth0,\'selected\': depth0,\'expand-depth\': depth0,\'in-multi-selection\': depth0,\'multi-selection\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tree\", options))));\n      data.buffer.push(\"\\n</p>\\n\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"handlebars\\\">{{em-tree model=model selected=current expand-depth=expandDepth}}\\n</code></pre>\\n</div>\\n\\nTotal #\");\n      stack1 = helpers._triageMustache.call(depth0, \"multi.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" selected items: \");\n      stack1 = helpers._triageMustache.call(depth0, \"multiNames\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h2>Code</h2>\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"coffeescript\\\">Ember.Controller.extend\\n    expandDepth: 0\\n    actions:\\n        anotherLevel: ->\\n            @set \'expandDepth\', @get(\'expandDepth\')+1\\n</code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tree/multiselection.js");

;eval("define(\"examples/templates/component/tree/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\nSelected node is: \");\n      stack1 = helpers._triageMustache.call(depth0, \"selected.title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"expand\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">toggle expand</button>\\n\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"\\nSelect a node by clicking on it\\n\");\n      }\n\n      data.buffer.push(\"<h1>Simple Tree</h1>\\n\\n<p>\\nThe simplest form of the tree component is to build a tree of nodes ahead and assign the root node to the <i>{{em-tree}}</i> tag.\\n</p>\\n\\n<p>\\n<ol>\\n    <li>The model must have a <i>children<i/> property that is an array of the children models.</li>\\n    <li>The <i>selected</i> property will be bound to the selected node in the tree.</li>\\n</ol>\\n</p>\\n\\n<h2>Demo</h2>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-tree\'] || (depth0 && depth0[\'em-tree\']),options={hash:{\n        \'model\': (\"model\"),\n        \'selected\': (\"selected\")\n      },hashTypes:{\'model\': \"ID\",\'selected\': \"ID\"},hashContexts:{\'model\': depth0,\'selected\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tree\", options))));\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"selected\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"handlebars\\\">{{em-tree model=model selected=selected}}\\n&lt;button {{action \'expand\'}}&gt;toggle expand&lt;/button&gt;\\n</code></pre>\\n</div>\\n\\n<h2>Code</h2>\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"coffeescript\\\">App.ComponentTreeSimpleController = Em.ObjectController.extend\\n    init: ->\\n        #Root\\n        #TODO: Import EC instead\\n        family = Em.EC.TreeNode.create({title: \'Family\'})\\n        #1st level\\n        suz = family.createChild {title: \'Susan\'}\\n        lud = family.createChild {title: \'Luda\'}\\n\\n        #2nd level\\n        josh = suz.createChild({title: \'Josh\'})\\n        moses = suz.createChild({title: \'Moses\'})\\n        verdi = lud.createChild({title: \'Verdi\'})\\n        gaya = lud.createChild({title: \'Gaya\'})\\n\\n        @set \'model\', family\\n\\n\\n    actions: \\n        expand: ->\\n            @get(\'selected\').toggleProperty \'expanded\'\\n            return null\\n</code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/tree/simple.js");

;eval("define(\"examples/templates/component/wysiwyg/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-wysiwyg-toolbar\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-wysiwyg-toolbar\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-wysiwyg-toolbar\']) { stack1 = blockHelperMissing.call(depth0, \'em-wysiwyg-toolbar\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"em-wysiwyg-editor\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-wysiwyg-action-group\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-wysiwyg-action-group\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-wysiwyg-action-group\']) { stack1 = blockHelperMissing.call(depth0, \'em-wysiwyg-action-group\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-wysiwyg-action-group\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-wysiwyg-action-group\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-wysiwyg-action-group\']) { stack1 = blockHelperMissing.call(depth0, \'em-wysiwyg-action-group\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-wysiwyg-action-group\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-wysiwyg-action-group\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-wysiwyg-action-group\']) { stack1 = blockHelperMissing.call(depth0, \'em-wysiwyg-action-group\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-wysiwyg-action\'] || (depth0 && depth0[\'em-wysiwyg-action\']),options={hash:{\n        \'command\': (\"bold\"),\n        \'title\': (\"Bold (Ctrl/Cmd+B)\"),\n        \'icon\': (\"fa fa-bold\")\n      },hashTypes:{\'command\': \"STRING\",\'title\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'command\': depth0,\'title\': depth0,\'icon\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg-action\", options))));\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-wysiwyg-action\'] || (depth0 && depth0[\'em-wysiwyg-action\']),options={hash:{\n        \'command\': (\"italic\"),\n        \'title\': (\"Italic (Ctrl/Cmd+I)\"),\n        \'icon\': (\"fa fa-italic\")\n      },hashTypes:{\'command\': \"STRING\",\'title\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'command\': depth0,\'title\': depth0,\'icon\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg-action\", options))));\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-wysiwyg-action\'] || (depth0 && depth0[\'em-wysiwyg-action\']),options={hash:{\n        \'command\': (\"strikethrough\"),\n        \'title\': (\"Strikethrough\"),\n        \'icon\': (\"fa fa-strikethrough\")\n      },hashTypes:{\'command\': \"STRING\",\'title\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'command\': depth0,\'title\': depth0,\'icon\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg-action\", options))));\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-wysiwyg-action\'] || (depth0 && depth0[\'em-wysiwyg-action\']),options={hash:{\n        \'command\': (\"underline\"),\n        \'title\': (\"Underline (Ctrl/Cmd+U)\"),\n        \'icon\': (\"fa fa-underline\")\n      },hashTypes:{\'command\': \"STRING\",\'title\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'command\': depth0,\'title\': depth0,\'icon\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg-action\", options))));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-wysiwyg-action\'] || (depth0 && depth0[\'em-wysiwyg-action\']),options={hash:{\n        \'command\': (\"justifyleft\"),\n        \'title\': (\"Align Left (Ctrl/Cmd+L)\"),\n        \'icon\': (\"fa fa-align-left\")\n      },hashTypes:{\'command\': \"STRING\",\'title\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'command\': depth0,\'title\': depth0,\'icon\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg-action\", options))));\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-wysiwyg-action\'] || (depth0 && depth0[\'em-wysiwyg-action\']),options={hash:{\n        \'command\': (\"justifycenter\"),\n        \'title\': (\"Align Center (Ctrl/Cmd+E)\"),\n        \'icon\': (\"fa fa-align-center\")\n      },hashTypes:{\'command\': \"STRING\",\'title\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'command\': depth0,\'title\': depth0,\'icon\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg-action\", options))));\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-wysiwyg-action\'] || (depth0 && depth0[\'em-wysiwyg-action\']),options={hash:{\n        \'command\': (\"justifyright\"),\n        \'title\': (\"Align Right (Ctrl/Cmd+R)\"),\n        \'icon\': (\"fa fa-align-right\")\n      },hashTypes:{\'command\': \"STRING\",\'title\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'command\': depth0,\'title\': depth0,\'icon\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg-action\", options))));\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-wysiwyg-action\'] || (depth0 && depth0[\'em-wysiwyg-action\']),options={hash:{\n        \'command\': (\"justifyfull\"),\n        \'title\': (\"Justify (Ctrl/Cmd+J)\"),\n        \'icon\': (\"fa fa-align-justify\")\n      },hashTypes:{\'command\': \"STRING\",\'title\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'command\': depth0,\'title\': depth0,\'icon\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg-action\", options))));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-wysiwyg-action\'] || (depth0 && depth0[\'em-wysiwyg-action\']),options={hash:{\n        \'command\': (\"undo\"),\n        \'title\': (\"Undo(Ctrl/Cmd+Z)\"),\n        \'icon\': (\"fa fa-undo\")\n      },hashTypes:{\'command\': \"STRING\",\'title\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'command\': depth0,\'title\': depth0,\'icon\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg-action\", options))));\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-wysiwyg-action\'] || (depth0 && depth0[\'em-wysiwyg-action\']),options={hash:{\n        \'command\': (\"redo\"),\n        \'title\': (\"Redo (Ctrl/Cmd+Y)\"),\n        \'icon\': (\"fa fa-repeat\")\n      },hashTypes:{\'command\': \"STRING\",\'title\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'command\': depth0,\'title\': depth0,\'icon\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg-action\", options))));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Simple Wysiwyg</h1>\\n\\n<h2>Demo</h2>\\n\\n\");\n      stack1 = (helper = helpers[\'em-wysiwyg\'] || (depth0 && depth0[\'em-wysiwyg\']),options={hash:{\n        \'configName\': (\"bs\"),\n        \'as_html\': (\"data\")\n      },hashTypes:{\'configName\': \"STRING\",\'as_html\': \"ID\"},hashContexts:{\'configName\': depth0,\'as_html\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-wysiwyg\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">\\n{{#em-wysiwyg configName=\\\"bs\\\" as_html=wtf}}\\n    {{#em-wysiwyg-toolbar}}\\n        {{#em-wysiwyg-action-group}}\\n            {{em-wysiwyg-action command=\\\"bold\\\" title=\\\"Bold (Ctrl/Cmd+B)\\\" icon=\\\"fa fa-bold\\\"}}\\n            {{em-wysiwyg-action command=\\\"italic\\\" title=\\\"Italic (Ctrl/Cmd+I)\\\" icon=\\\"fa fa-italic\\\"}}\\n        {{/em-wysiwyg-action-group}}\\n        {{#em-wysiwyg-action-group}}\\n            {{em-wysiwyg-action command=\\\"justifyleft\\\" title=\\\"Align Left (Ctrl/Cmd+L)\\\" icon=\\\"fa fa-align-left\\\"}}\\n            {{em-wysiwyg-action command=\\\"justifyright\\\" title=\\\"Align Right (Ctrl/Cmd+R)\\\" icon=\\\"fa fa-align-right\\\"}}\\n        {{/em-wysiwyg-action-group}}\\n        {{#em-wysiwyg-action-group}}\\n            {{em-wysiwyg-action command=\\\"undo\\\" title=\\\"Undo(Ctrl/Cmd+Z)\\\" icon=\\\"fa fa-undo\\\"}}\\n            {{em-wysiwyg-action command=\\\"redo\\\" title=\\\"Redo (Ctrl/Cmd+Y)\\\" icon=\\\"fa fa-repeat\\\"}}\\n        {{/em-wysiwyg-action-group}}\\n    {{/em-wysiwyg-toolbar}}\\n    {{em-wysiwyg-editor}}\\n{{/em-wysiwyg}}\\n    </code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/component/wysiwyg/simple.js");

;eval("define(\"examples/templates/getstarted\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Components Page\");\n      }\n\n      data.buffer.push(\"<h1>Getting Started</h1>\\n\\n<h2>Ember CLI</h2>\\n<ol>\\n    <li>\\n        <p><i>optional:</i> Create an app if you don\'t have one already.</p>\\n        <pre><code class=\\\"bash\\\">ember init</code></pre>\\n    </li>\\n    <li>\\n        <p>Install the components addon<p>\\n        <pre><code class=\\\"bash\\\">npm install --save-dev ember-cli-components</code></pre>\\n    </li>\\n</ol>\\n\\n<h2>Manual</h2>\\n\\n<ol>\\n    <li>\\n        <p>Installing via <i>bower</i> is the simplest form:</p>\\n        <pre><code class=\\\"bash\\\">bower install ember-components</code></pre>\\n    </li>\\n    <li>\\n    <p><i>recommended (but not required): </i>Include Bootstrap for styling as most components are already styled for Bootstrap.</p>\\n        <pre><code class=\\\"html\\\">&lt;link href=\\\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\"&gt;</code></pre>\\n    </li>\\n    <li>\\n        <p>Include Ember Component (and its dependencies)</p>\\n        <pre><code class=\\\"html\\\">&lt;script src=\\\"bower_components/ember-components/dist/globals/main.js\\\"&gt;\\n&lt;script src=\\\"bower_components/ember-utils/dist/globals/main.js\\\"&gt;\\n&lt;script src=\\\"bower_components/ic-styled/main.js\\\"&gt;</script></code></pre>\\n        <b>Note:</b> If you want other options then importing the entire library globally take a look at: <a href=\\\"https://github.com/indexiatech/ember-components/tree/master/dist\\\">dist folder</a>\\n    </li>\\n</ol>\\n\\n<p>Of course you need jquery, ember.js and handlebars included in your project too.</p>\\n\\n\\n<p>Want to see some code? check out the \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component\", options) : helperMissing.call(depth0, \"link-to\", \"component\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/getstarted.js");

;eval("define(\"examples/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\';\n\n\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/index.js");

;eval("define(\"examples/templates/navbar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<nav role=\\\"navigation\\\" class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"buttonin\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\" class=\\\"navbar-toggle\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Ember Components</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li class=\\\"active\\\">\\n                    <a href=\\\"#\\\">\\n                        <i class=\\\"fa fa-home\\\"></i>\\n                        Home\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"https://github.com/indexiatech/ember-components\\\">\\n                        <i class=\\\"fa fa-github-alt\\\"></i>\\n                        Github\\n                    </a>\\n                </li>\\n            </ul>\\n            <form class=\\\"navbar-form navbar-right\\\">\\n                <a href=\\\"https://github.com/indexiatech/ember-components/archive/master.zip\\\" style=\\\"font-weight:bold\\\" class=\\\"btn btn-success\\\">\\n                    <i class=\\\"fa fa-save\\\"></i>\\n                    Download 1~ kb\\n                </a>\\n            </form>\\n            <div class=\\\"socials\\\" style=\\\"text-align: center\\\">\\n                <ul class=\\\"bs-social-buttons\\\">\\n                    <li>\\n                        <!-- github -->\\n                        <div>\\n                        <iframe class=\\\"github-btn\\\"\\n                            src=\\\"http://ghbtns.com/github-btn.html?user=indexiatech&amp;repo=ember-components&amp;type=watch&amp;count=true\\\" width=\\\"100\\\" height=\\\"20\\\" title=\\\"Star on GitHub\\\"></iframe>\\n                        </div>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</nav>\");\n      \n    });\n  });//# sourceURL=examples/templates/navbar.js");

;eval("define(\"examples/templates/overview\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"See more\");\n      }\n\n      data.buffer.push(\"<div class=\\\"jumbotron\\\">\\n    <h1>Ember Components</h1>\\n    <p>\\n        <b>Ember Components</b> is a set of rich web components written for <i>Ember.js</i> that let you create an astonishing UI for ambitious web applications.\\n    </p>\\n    <p style=\\\"font-size: 13px;\\\">\\n        This project aims to be the successor of our <a href=\\\"https://github.com/ember-addons/bootstrap-for-ember\\\">Bootstrap for Ember</a> project as all components on this suite are not bound to any specific CSS framework.\\n    </p>\\n    <p>\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"btn btn-primary btn-lg\"),\n        \'role\': (\"button\")\n      },hashTypes:{\'class\': \"STRING\",\'role\': \"STRING\"},hashContexts:{\'class\': depth0,\'role\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"component\", options) : helperMissing.call(depth0, \"link-to\", \"component\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </p>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/overview.js");

;eval("define(\"examples/templates/sidebar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"route\", options) : helperMissing.call(depth0, \"link-to\", \"route\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n            <ul class=\\\"nav\\\">\\n            \");\n      stack1 = helpers.each.call(depth0, \"items\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            </ul>\\n        \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"route\", options) : helperMissing.call(depth0, \"link-to\", \"route\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n                \");\n      stack1 = helpers[\'if\'].call(depth0, \"open\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n                <ul class=\\\"subnav\\\">\\n                \");\n      stack1 = helpers.each.call(depth0, \"items\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                </ul>\\n                \");\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"route\", options) : helperMissing.call(depth0, \"link-to\", \"route\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n                \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"well sidebar\\\">\\n    <ul class=\\\"nav\\\">\\n        \");\n      stack1 = helpers.each.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </ul>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=examples/templates/sidebar.js");

;eval("define(\"examples/tests/examples/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/adapters\');\n    test(\'examples/adapters/application.js should pass jshint\', function() { \n      ok(false, \'examples/adapters/application.js should pass jshint.\\nexamples/adapters/application.js: line 1, col 13, \\\'Ember\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=examples/tests/examples/adapters/application.jshint.js");

;eval("define(\"examples/tests/examples/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples\');\n    test(\'examples/app.js should pass jshint\', function() { \n      ok(true, \'examples/app.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/app.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/accordion/query-params.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/accordion\');\n    test(\'examples/controllers/component/accordion/query-params.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/accordion/query-params.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/accordion/query-params.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/button/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/button\');\n    test(\'examples/controllers/component/button/index.js should pass jshint\', function() { \n      ok(false, \'examples/controllers/component/button/index.js should pass jshint.\\nexamples/controllers/component/button/index.js: line 11, col 54, \\\'rej\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/button/index.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/list/models.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/list\');\n    test(\'examples/controllers/component/list/models.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/list/models.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/list/models.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/list/state.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/list\');\n    test(\'examples/controllers/component/list/state.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/list/state.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/list/state.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/modal/confirm.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/modal\');\n    test(\'examples/controllers/component/modal/confirm.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/modal/confirm.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/modal/confirm.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/modal/emforms.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/modal\');\n    test(\'examples/controllers/component/modal/emforms.js should pass jshint\', function() { \n      ok(false, \'examples/controllers/component/modal/emforms.js should pass jshint.\\nexamples/controllers/component/modal/emforms.js: line 13, col 26, \\\'t\\\' is defined but never used.\\nexamples/controllers/component/modal/emforms.js: line 24, col 41, \\\'rej\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/modal/emforms.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/modal/forms.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/modal\');\n    test(\'examples/controllers/component/modal/forms.js should pass jshint\', function() { \n      ok(false, \'examples/controllers/component/modal/forms.js should pass jshint.\\nexamples/controllers/component/modal/forms.js: line 20, col 26, \\\'t\\\' is defined but never used.\\nexamples/controllers/component/modal/forms.js: line 28, col 41, \\\'rej\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/modal/forms.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/modal/openifcloseif.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/modal\');\n    test(\'examples/controllers/component/modal/openifcloseif.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/modal/openifcloseif.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/modal/openifcloseif.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/modal/reuse.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/modal\');\n    test(\'examples/controllers/component/modal/reuse.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/modal/reuse.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/modal/reuse.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/tabs/c1.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/tabs\');\n    test(\'examples/controllers/component/tabs/c1.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/tabs/c1.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/tabs/c1.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/tabs/c2.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/tabs\');\n    test(\'examples/controllers/component/tabs/c2.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/tabs/c2.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/tabs/c2.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/tabs/query-params.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/tabs\');\n    test(\'examples/controllers/component/tabs/query-params.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/tabs/query-params.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/tabs/query-params.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/tree/async.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/tree\');\n    test(\'examples/controllers/component/tree/async.js should pass jshint\', function() { \n      ok(false, \'examples/controllers/component/tree/async.js should pass jshint.\\nexamples/controllers/component/tree/async.js: line 11, col 14, \\\'Em\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/tree/async.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/tree/expand.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/tree\');\n    test(\'examples/controllers/component/tree/expand.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/tree/expand.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/tree/expand.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/tree/hoveredactions.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/tree\');\n    test(\'examples/controllers/component/tree/hoveredactions.js should pass jshint\', function() { \n      ok(false, \'examples/controllers/component/tree/hoveredactions.js should pass jshint.\\nexamples/controllers/component/tree/hoveredactions.js: line 20, col 14, \\\'Em\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/tree/hoveredactions.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/tree/multiselection.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/tree\');\n    test(\'examples/controllers/component/tree/multiselection.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/component/tree/multiselection.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/tree/multiselection.jshint.js");

;eval("define(\"examples/tests/examples/controllers/component/tree/simple.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers/component/tree\');\n    test(\'examples/controllers/component/tree/simple.js should pass jshint\', function() { \n      ok(false, \'examples/controllers/component/tree/simple.js should pass jshint.\\nexamples/controllers/component/tree/simple.js: line 7, col 14, \\\'Em\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/component/tree/simple.jshint.js");

;eval("define(\"examples/tests/examples/controllers/sidebar.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/controllers\');\n    test(\'examples/controllers/sidebar.js should pass jshint\', function() { \n      ok(true, \'examples/controllers/sidebar.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/controllers/sidebar.jshint.js");

;eval("define(\"examples/tests/examples/initializers/hightlightjs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/initializers\');\n    test(\'examples/initializers/hightlightjs.js should pass jshint\', function() { \n      ok(false, \'examples/initializers/hightlightjs.js should pass jshint.\\nexamples/initializers/hightlightjs.js: line 11, col 18, \\\'$\\\' is not defined.\\nexamples/initializers/hightlightjs.js: line 12, col 20, \\\'hljs\\\' is not defined.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=examples/tests/examples/initializers/hightlightjs.jshint.js");

;eval("define(\"examples/tests/examples/initializers/scrolltotop.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/initializers\');\n    test(\'examples/initializers/scrolltotop.js should pass jshint\', function() { \n      ok(false, \'examples/initializers/scrolltotop.js should pass jshint.\\nexamples/initializers/scrolltotop.js: line 10, col 16, \\\'$\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=examples/tests/examples/initializers/scrolltotop.jshint.js");

;eval("define(\"examples/tests/examples/models/tag.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/models\');\n    test(\'examples/models/tag.js should pass jshint\', function() { \n      ok(true, \'examples/models/tag.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/models/tag.jshint.js");

;eval("define(\"examples/tests/examples/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/models\');\n    test(\'examples/models/user.js should pass jshint\', function() { \n      ok(false, \'examples/models/user.js should pass jshint.\\nexamples/models/user.js: line 4, col 24, \\\'Ember\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=examples/tests/examples/models/user.jshint.js");

;eval("define(\"examples/tests/examples/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples\');\n    test(\'examples/router.js should pass jshint\', function() { \n      ok(false, \'examples/router.js should pass jshint.\\nexamples/router.js: line 1, col 27, Unnecessary semicolon.\\nexamples/router.js: line 49, col 23, Unnecessary semicolon.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=examples/tests/examples/router.jshint.js");

;eval("define(\"examples/tests/examples/routes/component/list/models.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/routes/component/list\');\n    test(\'examples/routes/component/list/models.js should pass jshint\', function() { \n      ok(true, \'examples/routes/component/list/models.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/routes/component/list/models.jshint.js");

;eval("define(\"examples/tests/examples/routes/component/modal/emforms.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/routes/component/modal\');\n    test(\'examples/routes/component/modal/emforms.js should pass jshint\', function() { \n      ok(true, \'examples/routes/component/modal/emforms.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/routes/component/modal/emforms.jshint.js");

;eval("define(\"examples/tests/examples/routes/component/modal/reuse.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/routes/component/modal\');\n    test(\'examples/routes/component/modal/reuse.js should pass jshint\', function() { \n      ok(true, \'examples/routes/component/modal/reuse.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/routes/component/modal/reuse.jshint.js");

;eval("define(\"examples/tests/examples/routes/component/tree/async.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/routes/component/tree\');\n    test(\'examples/routes/component/tree/async.js should pass jshint\', function() { \n      ok(false, \'examples/routes/component/tree/async.js should pass jshint.\\nexamples/routes/component/tree/async.js: line 7, col 12, \\\'Em\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=examples/tests/examples/routes/component/tree/async.jshint.js");

;eval("define(\"examples/tests/examples/routes/component/tree/emberdata.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/routes/component/tree\');\n    test(\'examples/routes/component/tree/emberdata.js should pass jshint\', function() { \n      ok(true, \'examples/routes/component/tree/emberdata.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/routes/component/tree/emberdata.jshint.js");

;eval("define(\"examples/tests/examples/routes/component/tree/expand.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/routes/component/tree\');\n    test(\'examples/routes/component/tree/expand.js should pass jshint\', function() { \n      ok(true, \'examples/routes/component/tree/expand.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/routes/component/tree/expand.jshint.js");

;eval("define(\"examples/tests/examples/routes/component/tree/multiselection.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/routes/component/tree\');\n    test(\'examples/routes/component/tree/multiselection.js should pass jshint\', function() { \n      ok(true, \'examples/routes/component/tree/multiselection.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/routes/component/tree/multiselection.jshint.js");

;eval("define(\"examples/tests/examples/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - examples/routes\');\n    test(\'examples/routes/index.js should pass jshint\', function() { \n      ok(true, \'examples/routes/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=examples/tests/examples/routes/index.jshint.js");
