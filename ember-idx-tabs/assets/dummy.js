eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/tab-list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit\');\n    test(\'ember-cli-qunit/tab-list.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/tab-list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/tab-list.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/tab-panel.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit\');\n    test(\'ember-cli-qunit/tab-panel.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/tab-panel.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/tab-panel.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/tab.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit\');\n    test(\'ember-cli-qunit/tab.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/tab.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/tab.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/tabs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit\');\n    test(\'ember-cli-qunit/tabs.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/tabs.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/tabs.jshint.js");

;eval("define(\"dummy/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=dummy/app.js");

;eval("define(\"dummy/components/em-tab-list\", \n  [\"ember-idx-tabs/tab-list\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var TabListComponent = __dependency1__[\"default\"];\n    __exports__[\"default\"] = TabListComponent;\n  });//# sourceURL=dummy/components/em-tab-list.js");

;eval("define(\"dummy/components/em-tab-panel\", \n  [\"ember-idx-tabs/tab-panel\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var TabPanelComponent = __dependency1__[\"default\"];\n    __exports__[\"default\"] = TabPanelComponent;\n  });//# sourceURL=dummy/components/em-tab-panel.js");

;eval("define(\"dummy/components/em-tab\", \n  [\"ember-idx-tabs/tab\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var TabComponent = __dependency1__[\"default\"];\n    __exports__[\"default\"] = TabComponent;\n  });//# sourceURL=dummy/components/em-tab.js");

;eval("define(\"dummy/components/em-tabs\", \n  [\"ember-idx-tabs/tabs\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var TabsComponent = __dependency1__[\"default\"];\n    __exports__[\"default\"] = TabsComponent;\n  });//# sourceURL=dummy/components/em-tabs.js");

;eval("define(\"dummy/controllers/c1\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Em.ObjectController.extend({\n        label: \"I\'m controller 1\"\n    });\n  });//# sourceURL=dummy/controllers/c1.js");

;eval("define(\"dummy/controllers/c2\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Em.ObjectController.extend({\n        label: \"I\'m controller 2\"\n    });\n  });//# sourceURL=dummy/controllers/c2.js");

;eval("define(\"dummy/controllers/query-params\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Em.ObjectController.extend({\n        queryParams: [\'tab_idx\'],\n        tab_idx: 0\n    });\n  });//# sourceURL=dummy/controllers/query-params.js");

;eval("define(\"dummy/controllers/sidebar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Em.ArrayController.extend({\n      needs: [\'application\'],\n      model: [\n        {route: \'gettingstarted\', text: \'Getting Started\'},\n        {route: \'simple\', text: \'Simple\'},\n        {route: \'styles\', text: \'Styles\'},\n        {route: \'query_params\', text: \'Query Params\'},\n        {route: \'controller_per_tab\', text: \'Controller Per Tab\'}\n      ]\n    });\n  });//# sourceURL=dummy/controllers/sidebar.js");

;eval("define(\"dummy/controllers/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    var set = Em.set;\n    var d = Em.debug;\n\n    __exports__[\"default\"] = Em.Controller.extend({\n        tourSteps1: [\n            {\n                element: \".step1\",\n                title: \"Title of my step\",\n                content: \"Content of my step\"\n            },\n            {\n                element: \".step2\",\n                title: \"Title of my step\",\n                content: \"Content of my step\"\n            }\n        ],\n\n        actions: {\n            start: function() {\n                this.set(\'startTour1\', true);\n            },\n\n            onShow: function() {\n                d(\'on-show invoked\');\n            },\n\n            onNext: function() {\n                d(\'on-next invoked\');\n            },\n\n            onPrev: function() {\n                d(\'on-prev invoked\');\n            },\n\n            onStart: function() {\n                d(\'on-start invoked\');\n            },\n\n            onEnd: function() {\n                d(\'on-end invoked\');\n            }\n        }\n    });\n  });//# sourceURL=dummy/controllers/simple.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/tab-list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy\');\n    test(\'ember-cli-content-security-policy/tab-list.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/tab-list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/tab-list.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/tab-panel.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy\');\n    test(\'ember-cli-content-security-policy/tab-panel.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/tab-panel.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/tab-panel.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/tab.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy\');\n    test(\'ember-cli-content-security-policy/tab.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/tab.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/tab.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/tabs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy\');\n    test(\'ember-cli-content-security-policy/tabs.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/tabs.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/tabs.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/tab-list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext\');\n    test(\'ember-cli-esnext/tab-list.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/tab-list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/tab-list.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/tab-panel.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext\');\n    test(\'ember-cli-esnext/tab-panel.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/tab-panel.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/tab-panel.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/tab.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext\');\n    test(\'ember-cli-esnext/tab.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/tab.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/tab.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/tabs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext\');\n    test(\'ember-cli-esnext/tabs.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/tabs.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/tabs.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/tab-list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data\');\n    test(\'ember-data/tab-list.js should pass jshint\', function() { \n      ok(true, \'ember-data/tab-list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/tab-list.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/tab-panel.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data\');\n    test(\'ember-data/tab-panel.js should pass jshint\', function() { \n      ok(true, \'ember-data/tab-panel.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/tab-panel.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/tab.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data\');\n    test(\'ember-data/tab.js should pass jshint\', function() { \n      ok(true, \'ember-data/tab.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/tab.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/tabs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data\');\n    test(\'ember-data/tabs.js should pass jshint\', function() { \n      ok(true, \'ember-data/tabs.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/tabs.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/tab-list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global\');\n    test(\'ember-export-application-global/tab-list.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/tab-list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/tab-list.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/tab-panel.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global\');\n    test(\'ember-export-application-global/tab-panel.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/tab-panel.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/tab-panel.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/tab.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global\');\n    test(\'ember-export-application-global/tab.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/tab.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/tab.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/tabs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global\');\n    test(\'ember-export-application-global/tabs.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/tabs.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/tabs.jshint.js");

;eval("define(\"dummy/ember-idx-tabs/tests/ember-idx-tabs/tab-list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-tabs\');\n    test(\'ember-idx-tabs/tab-list.js should pass jshint\', function() { \n      ok(true, \'ember-idx-tabs/tab-list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-tabs/tests/ember-idx-tabs/tab-list.jshint.js");

;eval("define(\"dummy/ember-idx-tabs/tests/ember-idx-tabs/tab-panel.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-tabs\');\n    test(\'ember-idx-tabs/tab-panel.js should pass jshint\', function() { \n      ok(true, \'ember-idx-tabs/tab-panel.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-tabs/tests/ember-idx-tabs/tab-panel.jshint.js");

;eval("define(\"dummy/ember-idx-tabs/tests/ember-idx-tabs/tab.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-tabs\');\n    test(\'ember-idx-tabs/tab.js should pass jshint\', function() { \n      ok(true, \'ember-idx-tabs/tab.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-tabs/tests/ember-idx-tabs/tab.jshint.js");

;eval("define(\"dummy/ember-idx-tabs/tests/ember-idx-tabs/tabs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-tabs\');\n    test(\'ember-idx-tabs/tabs.js should pass jshint\', function() { \n      ok(true, \'ember-idx-tabs/tabs.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-tabs/tests/ember-idx-tabs/tabs.jshint.js");

;eval("define(\"dummy/ember-idx-utils/tests/ember-idx-utils/tab-list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-utils\');\n    test(\'ember-idx-utils/tab-list.js should pass jshint\', function() { \n      ok(true, \'ember-idx-utils/tab-list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-utils/tests/ember-idx-utils/tab-list.jshint.js");

;eval("define(\"dummy/ember-idx-utils/tests/ember-idx-utils/tab-panel.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-utils\');\n    test(\'ember-idx-utils/tab-panel.js should pass jshint\', function() { \n      ok(true, \'ember-idx-utils/tab-panel.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-utils/tests/ember-idx-utils/tab-panel.jshint.js");

;eval("define(\"dummy/ember-idx-utils/tests/ember-idx-utils/tab.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-utils\');\n    test(\'ember-idx-utils/tab.js should pass jshint\', function() { \n      ok(true, \'ember-idx-utils/tab.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-utils/tests/ember-idx-utils/tab.jshint.js");

;eval("define(\"dummy/ember-idx-utils/tests/ember-idx-utils/tabs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-utils\');\n    test(\'ember-idx-utils/tabs.js should pass jshint\', function() { \n      ok(true, \'ember-idx-utils/tabs.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-utils/tests/ember-idx-utils/tabs.jshint.js");

;eval("define(\"dummy/initializers/export-application-global\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=dummy/initializers/export-application-global.js");

;eval("define(\"dummy/initializers/highlight\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    /*global hljs*/\n\n    __exports__[\"default\"] = {\n      name: \'hightlightjs\',\n      initialize: function() {\n        return Em.Route.reopen({\n          renderTemplate: function() {\n            this._super();\n            return Em.run.next(this, function() {\n              return $(\'pre code\').each(function(i, e) {\n                return hljs.highlightBlock(e);\n              });\n            });\n          }\n        });\n      }\n    };\n  });//# sourceURL=dummy/initializers/highlight.js");

;eval("define(\"dummy/initializers/idx-tabs\", \n  [\"ember\",\"ember-idx-utils/config\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    var Config = __dependency2__[\"default\"];__exports__[\"default\"] = {\n      name: \'ember-idx-tabs\',\n      initialize: function() {\n        if (!Em.Config) {\n            Em.Config = Config = Config.create()\n        }\n\n        var defaultConfig = Config.getConfig(\'default\');\n        if (!defaultConfig) {\n            Config.addConfig(\'default\');\n            defaultConfig = Config.getConfig(\'default\');\n        }\n\n        defaultConfig[\'tabs\'] = {\n            tabsTag: [\'div\'],\n            tabTag: [\'li\'],\n            tabListTag: [\'ul\'],\n            tabsClasses: [\'em-tabs\'],\n            tabClasses: [\'em-tab\'],\n            tabListClasses: [\'em-tab-list\'],\n            tabPanelClasses: [\'em-tab-panel\']\n        }\n\n        //Bootstrap\n        var bsConfig = Config.getConfig(\'bs\');\n        if (!bsConfig) {\n            Config.addConfig(\'bs\');\n            bsConfig = Config.getConfig(\'bs\');\n        }\n        bsConfig[\'tabs\'] = {\n            tabTag: [\'li\'],\n            tabListTag: [\'ul\'],\n            tabListClasses: [\'nav\', \'nav-tabs\'],\n            tabPanelClasses: [\'em-tab-panel\'],\n            tabSelectedClasses: [\'active\']        \n        }\n      }\n    };\n  });//# sourceURL=dummy/initializers/idx-tabs.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/tab-list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware\');\n    test(\'live-reload-middleware/tab-list.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/tab-list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/tab-list.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/tab-panel.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware\');\n    test(\'live-reload-middleware/tab-panel.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/tab-panel.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/tab-panel.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/tab.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware\');\n    test(\'live-reload-middleware/tab.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/tab.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/tab.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/tabs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware\');\n    test(\'live-reload-middleware/tabs.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/tabs.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/tabs.jshint.js");

;eval("define(\"dummy/router\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n        this.route( \'gettingstarted\' );\n        this.route( \'simple\' );\n        this.route( \'styles\' );\n        this.route( \'query_params\' );\n        this.route( \'controller_per_tab\' );\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=dummy/router.js");

;eval("define(\"dummy/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar\", options) : helperMissing.call(depth0, \"render\", \"navbar\", options))));\n      data.buffer.push(\"\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3 col-xs-12\\\">\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"sidebar\", options) : helperMissing.call(depth0, \"render\", \"sidebar\", options))));\n      data.buffer.push(\"\\n        </div>\\n        <div class=\\\"col-sm-9 col-xs-12 page\\\">\\n            \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </div>\\n    </div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/application.js");

;eval("define(\"dummy/templates/c1\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"controller.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      \n    });\n  });//# sourceURL=dummy/templates/c1.js");

;eval("define(\"dummy/templates/c2\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"controller.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/c2.js");

;eval("define(\"dummy/templates/c3\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"controller.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/c3.js");

;eval("define(\"dummy/templates/controller_per_tab\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Foo\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Bar\");\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"c1\", options) : helperMissing.call(depth0, \"render\", \"c1\", options))));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"c2\", options) : helperMissing.call(depth0, \"render\", \"c2\", options))));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Controller per Tab</h1>\\n\\nIf your tabs are more advanced and contains large template & logic you can have a separated\\ntemplate / controller pair per tab by using the <i>{{render}}</i> handlebars helper.\\n<br/><br/>\\n<p><i><a href=\\\"http://emberjs.com/guides/templates/rendering-with-helpers\\\">Please check Ember\'s {{render}}\\ndoc for more info.</a></i></p>\\n\\n<h2>Demo</h2>\\n<div class=\\\"line-example\\\">\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tabs\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tabs\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tabs\']) { stack1 = blockHelperMissing.call(depth0, \'em-tabs\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\\n<hr/>\\n<h2>Template</h2>\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">\\n                {{#em-tabs}}\\n                    {{#em-tab-list}}\\n                        {{#em-tab}}Foo{{/em-tab}}\\n                        {{#em-tab}}Bar{{/em-tab}}\\n                    {{/em-tab-list}}\\n                    {{#em-tab-panel}}\\n                        {{render \'c1\'}}\\n                    {{/em-tab-panel}}\\n                    {{#em-tab-panel}}\\n                        {{render \'c2\'}}\\n                    {{/em-tab-panel}}\\n                {{/em-tabs}}\\n    </code></pre>\\n</div>\\n\\n<h2>Controllers</h2>\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"javascript\\\">\\n    //c1 controller of the c1 template\\n    export default Em.Controller.extend({\\n        label: \\\"I\'m controller 1\\\"\\n    });\\n    //c2 controller of the c2 template\\n    export default Em.Controller.extend({\\n        label: \\\"I\'m controller 2\\\"\\n    });\\n    </code></pre>\\n</div>\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/controller_per_tab.js");

;eval("define(\"dummy/templates/gettingstarted\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Simple\");\n      }\n\n      data.buffer.push(\"<h1>Getting Started</h1>\\n\\n<p>\\n    <i>Ember-Idx-Tabs</i> is a multi panels defined with 1 single panel active at a time rendered as panels.\\n</p>\\n\\n<p>\\n    <i>Ember-Idx-Tabs</i> is an Ember CLI module and can be simply installed by:\\n</p>\\n\\n<p>\\n<ol>\\n    <li>\\n        <pre><code class=\\\"bash\\\">npm install --save-dev ember-idx-tabs</code></pre>\\n    </li>\\n</ol>\\n</p>\\n\\n<p>Want to see some code? check out the \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"simple\", options) : helperMissing.call(depth0, \"link-to\", \"simple\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" page</p>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/gettingstarted.js");

;eval("define(\"dummy/templates/navbar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<nav role=\\\"navigation\\\" class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"buttonin\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\" class=\\\"navbar-toggle\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Ember Idx Tabs</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li class=\\\"active\\\">\\n                    <a href=\\\"#\\\">\\n                        <i class=\\\"fa fa-home\\\"></i>\\n                        Home\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"https://github.com/indexiatech/ember-idx-tabs\\\">\\n                        <i class=\\\"fa fa-github-alt\\\"></i>\\n                        Github\\n                    </a>\\n                </li>\\n            </ul>\\n            <form class=\\\"navbar-form navbar-right\\\">\\n                <a href=\\\"https://github.com/indexiatech/ember-idx-tabs/archive/master.zip\\\" style=\\\"font-weight:bold\\\" class=\\\"btn btn-success\\\">\\n                    <i class=\\\"fa fa-save\\\"></i>\\n                    Download 1~ kb\\n                </a>\\n            </form>\\n            <div class=\\\"socials\\\" style=\\\"text-align: center\\\">\\n                <ul class=\\\"bs-social-buttons\\\">\\n                    <li>\\n                        <!-- github -->\\n                        <div>\\n                        <iframe class=\\\"github-btn\\\" src=\\\"http://ghbtns.com/github-btn.html?user=indexiatech&amp;repo=ember-idx-tabs&amp;type=watch&amp;count=true\\\" width=\\\"100\\\" height=\\\"20\\\" title=\\\"Star on GitHub\\\"></iframe>\\n                        </div>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</nav>\");\n      \n    });\n  });//# sourceURL=dummy/templates/navbar.js");

;eval("define(\"dummy/templates/query_params\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Foo\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Bar\");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"Baz\");\n      }\n\n    function program9(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            <p>Foo Content</p>\\n        \");\n      }\n\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            <p>Bar Content</p>\\n        \");\n      }\n\n    function program13(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            <p>Baz Content</p>\\n        \");\n      }\n\n      data.buffer.push(\"<h1>Tabs with Query Params</h1>\\n\\nIt is possible to bound the current selected tab to a controller parameter (usually a query param)\\nby bindingthe <i>selected-idx</i> property on the <i>{{em-tabs}}</i> tag.\\n\\n<p>\\n    Try to select another tab and refresh the page, see how the tab selected is persisted accross refreshes.\\n</p>\\n\\n<h2>Demo</h2>\\n<div class=\\\"line-example\\\">\\n    \");\n      stack1 = (helper = helpers[\'em-tabs\'] || (depth0 && depth0[\'em-tabs\']),options={hash:{\n        \'selected-idx\': (\"tab_idx\")\n      },hashTypes:{\'selected-idx\': \"ID\"},hashContexts:{\'selected-idx\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tabs\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\\n<hr/>\\n<h2>Template</h2>\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">\\n                {{#em-tabs selected-idx=tab_idx}}\\n                    {{#em-tab-list}}\\n                        {{#em-tab}}Foo{{/em-tab}}\\n                        {{#em-tab}}Bar{{/em-tab}}\\n                        {{#em-tab}}Baz{{/em-tab}}\\n                    {{/em-tab-list}}\\n                    {{#em-tab-panel}}\\n                        &lt;p>Foo Content&lt;/p>\\n                    {{/em-tab-panel}}\\n                    {{#em-tab-panel}}\\n                    &lt;p>Bar Content&lt;/p>\\n                        {{/em-tab-panel}}\\n                    {{#em-tab-panel}}\\n                    &lt;p>Baz Content&lt;/p>\\n                    {{/em-tab-panel}}\\n                {{/em-tabs}}\\n    </code></pre>\\n</div>\\n\\n<h2>Controller</h2>\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"javascript\\\">\\n        export default Em.ObjectController.extend({\\n            queryParams: [\'tab_idx\'],\\n            tab_idx: 0\\n        });\\n    </code></pre>\\n</div>\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/query_params.js");

;eval("define(\"dummy/templates/sidebar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"route\", options) : helperMissing.call(depth0, \"link-to\", \"route\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n            <ul class=\\\"nav\\\">\\n            \");\n      stack1 = helpers.each.call(depth0, \"items\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            </ul>\\n        \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"route\", options) : helperMissing.call(depth0, \"link-to\", \"route\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n            \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"well sidebar\\\">\\n    <ul class=\\\"nav\\\">\\n        \");\n      stack1 = helpers.each.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </ul>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/sidebar.js");

;eval("define(\"dummy/templates/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Foo\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Bar\");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Foo Content...\\n    \");\n      }\n\n    function program9(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Bar Content...\\n    \");\n      }\n\n      data.buffer.push(\"<h1>Simple Tabs</h1>\\n\\nThe simplest form of the tabs component is simply laying down tabs and their panes on the same template.\\n\\n\\n<h2>Demo</h2>\\n\");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tabs\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tabs\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tabs\']) { stack1 = blockHelperMissing.call(depth0, \'em-tabs\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"handlebars\\\">\\n{{#em-tabs}}\\n    {{#em-tab-list}}\\n        {{#em-tab}}One{{/em-tab}}\\n        {{#em-tab}}Two{{/em-tab}}\\n    {{/em-tab-list}}\\n    {{#em-tab-panel}}\\n        One Content...\\n    {{/em-tab-panel}}\\n    {{#em-tab-panel}}\\n        Two Content...\\n    {{/em-tab-panel}}\\n{{/em-tabs}}\\n</code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/simple.js");

;eval("define(\"dummy/templates/styles\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab-panel\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab-panel\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab-panel\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab-panel\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-tab\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-tab\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-tab\']) { stack1 = blockHelperMissing.call(depth0, \'em-tab\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"<a href=\\\"javascript:void(0)\\\">Foo</a>\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"<a href=\\\"javascript:void(0)\\\">Bar</a>\");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"<a href=\\\"javascript:void(0)\\\">Baz</a>\");\n      }\n\n    function program9(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Foo Content...\\n    \");\n      }\n\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Bar Content...\\n    \");\n      }\n\n    function program13(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        Baz Content...\\n    \");\n      }\n\n      data.buffer.push(\"<h1>Styling Tabs</h1>\\n\\nTab scan be styled by configuration, please look at the <i>idx-tabs.js</i> in the addon\'s initializer folder\\nfor more information about how to create new configs,\\n\\nHere is an example of the <i>bs</i> config that ships out of the box with the component,\\n\\nIf no <i>configName</i> specified the <i>default</i> config is used.\\n\\n<h2>Demo</h2>\\n\\n\");\n      stack1 = (helper = helpers[\'em-tabs\'] || (depth0 && depth0[\'em-tabs\']),options={hash:{\n        \'configName\': (\"bs\")\n      },hashTypes:{\'configName\': \"STRING\"},hashContexts:{\'configName\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tabs\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n<pre><code class=\\\"handlebars\\\">\\n{{#em-tabs configName=\\\"bs\\\"}}\\n    {{#em-tab-list}}\\n        {{#em-tab}}<a href=\\\"javascript:void(0)\\\">Foo</a>{{/em-tab}}\\n        {{#em-tab}}<a href=\\\"javascript:void(0)\\\">Bar</a>{{/em-tab}}\\n        {{#em-tab}}<a href=\\\"javascript:void(0)\\\">Baz</a>{{/em-tab}}\\n    {{/em-tab-list}}\\n    {{#em-tab-panel}}\\n        Foo Content...\\n    {{/em-tab-panel}}\\n    {{#em-tab-panel}}\\n        Bar Content...\\n    {{/em-tab-panel}}\\n    {{#em-tab-panel}}\\n        Baz Content...\\n    {{/em-tab-panel}}\\n{{/em-tabs}}\\n</code></pre>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/styles.js");

;eval("define(\"dummy/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/app.jshint.js");

;eval("define(\"dummy/tests/controllers/c1.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/c1.js should pass jshint\', function() { \n      ok(true, \'controllers/c1.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/c1.jshint.js");

;eval("define(\"dummy/tests/controllers/c2.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/c2.js should pass jshint\', function() { \n      ok(true, \'controllers/c2.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/c2.jshint.js");

;eval("define(\"dummy/tests/controllers/query-params.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/query-params.js should pass jshint\', function() { \n      ok(true, \'controllers/query-params.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/query-params.jshint.js");

;eval("define(\"dummy/tests/controllers/sidebar.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/sidebar.js should pass jshint\', function() { \n      ok(true, \'controllers/sidebar.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/sidebar.jshint.js");

;eval("define(\"dummy/tests/controllers/simple.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/simple.js should pass jshint\', function() { \n      ok(true, \'controllers/simple.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/simple.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/resolver.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/start-app.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests\');\n    test(\'dummy/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/test-helper.jshint.js");

;eval("define(\"dummy/tests/helpers/resolver\", \n  [\"ember/resolver\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=dummy/tests/helpers/resolver.js");

;eval("define(\"dummy/tests/helpers/start-app\", \n  [\"ember\",\"dummy/app\",\"dummy/router\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      return App;\n    }\n  });//# sourceURL=dummy/tests/helpers/start-app.js");

;eval("define(\"dummy/tests/initializers/highlight.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - initializers\');\n    test(\'initializers/highlight.js should pass jshint\', function() { \n      ok(true, \'initializers/highlight.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/initializers/highlight.jshint.js");

;eval("define(\"dummy/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/router.jshint.js");

;eval("define(\"dummy/tests/test-helper\", \n  [\"dummy/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=dummy/tests/test-helper.js");

/* jshint ignore:start */

define('dummy/config/environment', ['ember'], function(Ember) {
  var prefix = 'dummy';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require("dummy/tests/test-helper");
} else {
  require("dummy/app")["default"].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}



/* jshint ignore:end */
