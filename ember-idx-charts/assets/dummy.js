eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/cc-bar-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/components\');\n    test(\'ember-cli-qunit/components/cc-bar-chart.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/components/cc-bar-chart.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/cc-bar-chart.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/cc-line-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/components\');\n    test(\'ember-cli-qunit/components/cc-line-chart.js should pass jshint\', function() { \n      ok(false, \'ember-cli-qunit/components/cc-line-chart.js should pass jshint.\\nember-cli-qunit/components/cc-line-chart.js: line 35, col 46, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/cc-line-chart.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/cc-pd-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/components\');\n    test(\'ember-cli-qunit/components/cc-pd-chart.js should pass jshint\', function() { \n      ok(false, \'ember-cli-qunit/components/cc-pd-chart.js should pass jshint.\\nember-cli-qunit/components/cc-pd-chart.js: line 84, col 109, Expected an assignment or function call and instead saw an expression.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/cc-pd-chart.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/helpers/bar_line_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/helpers\');\n    test(\'ember-cli-qunit/helpers/bar_line_mixin.js should pass jshint\', function() { \n      ok(false, \'ember-cli-qunit/helpers/bar_line_mixin.js should pass jshint.\\nember-cli-qunit/helpers/bar_line_mixin.js: line 15, col 80, Expected an assignment or function call and instead saw an expression.\\nember-cli-qunit/helpers/bar_line_mixin.js: line 17, col 149, Expected an assignment or function call and instead saw an expression.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/helpers/bar_line_mixin.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/helpers/chart_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/helpers\');\n    test(\'ember-cli-qunit/helpers/chart_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/helpers/chart_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/helpers/chart_mixin.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/helpers/options_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/helpers\');\n    test(\'ember-cli-qunit/helpers/options_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/helpers/options_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/helpers/options_mixin.jshint.js");

;eval("define(\"dummy/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=dummy/app.js");

;eval("define(\"dummy/components/cc-bar-chart\", \n  [\"ember\",\"ember-idx-charts/components/cc-bar-chart\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    var Bar_Chart = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Bar_Chart;\n  });//# sourceURL=dummy/components/cc-bar-chart.js");

;eval("define(\"dummy/components/cc-line-chart\", \n  [\"ember\",\"ember-idx-charts/components/cc-line-chart\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    var Line_Chart = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Line_Chart;\n  });//# sourceURL=dummy/components/cc-line-chart.js");

;eval("define(\"dummy/components/cc-pd-chart\", \n  [\"ember\",\"ember-idx-charts/components/cc-pd-chart\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    var Pie_Don_Chart = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Pie_Don_Chart;\n  });//# sourceURL=dummy/components/cc-pd-chart.js");

;eval("define(\"dummy/controllers/charts/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Em.ObjectController.extend({\n        redValue: 300,\n        greenValue: 100,\n        blueValue: 50,\n        segmentShowStroke : false,\n        animateRotate : false,\n        animateScale : false,\n        extraData1: 0,\n        isPie: false,\n\n        reRender:false,\n\n        cakeData: function() {\n            var data = {blue: Number(this.get(\'blueValue\')), red: Number(this.get(\'redValue\')), green: Number(this.get(\'greenValue\'))};\n            if (this.get(\'extraData1\')>0) {data.extraData=Number(this.get(\'extraData1\'));}\n            return data;\n        }.property(\'redValue\', \'greenValue\', \'blueValue\',\'extraData1\'),\n\n        jan: 6528,\n        feb: 5948,\n        mar: 8040,\n        apr: 8119,\n        may: 5686,\n        jun: 5527,\n        jul: 4090,\n        aug:0,\n        label1:\'DEFINED\',\n        label2:\'COMPLETED\',\n\n        scaleShowGridLines: true,\n        barDatasetSpacing : 1,\n\n        barData: function() {\n            var dataset1 = {January: Number(this.get(\'jan\')/100), February: Number(this.get(\'feb\')/100), March: Number(this.get(\'mar\')/100),\n                April:Number(this.get(\'apr\')/100), May:Number(this.get(\'may\')/100), June:Number(this.get(\'jun\')/100), July:Number(this.get(\'jul\')/100),\n                label: this.get(\'label1\')};\n            var dataset2 = {January: Number(this.get(\'jan\')%100), February: Number(this.get(\'feb\')%100), March: Number(this.get(\'mar\')%100),\n                April:Number(this.get(\'apr\')%100), May:Number(this.get(\'may\')%100), June:Number(this.get(\'jun\')%100), July:Number(this.get(\'jul\')%100),\n                label: this.get(\'label2\')};\n            if (this.get(\'aug\')>0) {\n                dataset1.August=Number(this.get(\'aug\')/100);\n                dataset2.August=Number(this.get(\'aug\')%100);\n            }\n            return [dataset1,dataset2];\n        }.property(\'jan\',\'feb\',\'mar\',\'apr\',\'may\',\'jun\',\'jul\',\'aug\', \'label1\', \'label2\'),\n\n        janline: 6528,\n        febline: 5948,\n        marline: 8040,\n        aprline: 8119,\n        mayline: 5686,\n        junline: 5527,\n        julline: 4090,\n        augline:0,\n        label3:\'DEFINED\',\n        label4:\'COMPLETED\',\n\n        scaleShowGridLinesline: true,\n        pointDot : true,\n        datasetFill : true,\n\n        lineData: function() {\n            var dataset1 = {January: Number(this.get(\'janline\')/100), February: Number(this.get(\'febline\')/100), March: Number(this.get(\'marline\')/100),\n                April:Number(this.get(\'aprline\')/100), May:Number(this.get(\'mayline\')/100), June:Number(this.get(\'junline\')/100), July:Number(this.get(\'julline\')/100),\n                label: this.get(\'label3\')};\n            var dataset2 = {January: Number(this.get(\'janline\')%100), February: Number(this.get(\'febline\')%100), March: Number(this.get(\'marline\')%100),\n                April:Number(this.get(\'aprline\')%100), May:Number(this.get(\'mayline\')%100), June:Number(this.get(\'junline\')%100), July:Number(this.get(\'julline\')%100),\n                label: this.get(\'label4\')};\n            if (this.get(\'augline\')>0) {\n                dataset1.August=Number(this.get(\'augline\')/100);\n                dataset2.August=Number(this.get(\'augline\')%100);\n            }\n            return [dataset1,dataset2];\n        }.property(\'janline\',\'febline\',\'marline\',\'aprline\',\'mayline\',\'junline\',\'julline\',\'augline\', \'label3\', \'label4\'),\n\n        pClicked: \'\',\n        bClicked: \'\',\n        lClicked: \'\',\n\n        actions: {\n            clickPie: function(segment) {\n                this.set(\'pClicked\', (\'Clicked \' + segment.label));\n            },\n\n            clickBar: function(bar) {\n                this.set(\'bClicked\', (\'Clicked \' + bar.label));\n            },\n\n            clickLine: function(line) {\n                this.set(\'lClicked\', (\'Clicked \' + line.label));\n            },\n\n            rerender: function() {\n                this.set(\'reRender\', true);\n            }\n        }\n    });\n  });//# sourceURL=dummy/controllers/charts/index.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/cc-bar-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/components\');\n    test(\'ember-cli-content-security-policy/components/cc-bar-chart.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/components/cc-bar-chart.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/cc-bar-chart.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/cc-line-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/components\');\n    test(\'ember-cli-content-security-policy/components/cc-line-chart.js should pass jshint\', function() { \n      ok(false, \'ember-cli-content-security-policy/components/cc-line-chart.js should pass jshint.\\nember-cli-content-security-policy/components/cc-line-chart.js: line 35, col 46, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/cc-line-chart.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/cc-pd-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/components\');\n    test(\'ember-cli-content-security-policy/components/cc-pd-chart.js should pass jshint\', function() { \n      ok(false, \'ember-cli-content-security-policy/components/cc-pd-chart.js should pass jshint.\\nember-cli-content-security-policy/components/cc-pd-chart.js: line 84, col 109, Expected an assignment or function call and instead saw an expression.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/cc-pd-chart.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/helpers/bar_line_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/helpers\');\n    test(\'ember-cli-content-security-policy/helpers/bar_line_mixin.js should pass jshint\', function() { \n      ok(false, \'ember-cli-content-security-policy/helpers/bar_line_mixin.js should pass jshint.\\nember-cli-content-security-policy/helpers/bar_line_mixin.js: line 15, col 80, Expected an assignment or function call and instead saw an expression.\\nember-cli-content-security-policy/helpers/bar_line_mixin.js: line 17, col 149, Expected an assignment or function call and instead saw an expression.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/helpers/bar_line_mixin.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/helpers/chart_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/helpers\');\n    test(\'ember-cli-content-security-policy/helpers/chart_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/helpers/chart_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/helpers/chart_mixin.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/helpers/options_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/helpers\');\n    test(\'ember-cli-content-security-policy/helpers/options_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/helpers/options_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/helpers/options_mixin.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/components/cc-bar-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext/components\');\n    test(\'ember-cli-esnext/components/cc-bar-chart.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/components/cc-bar-chart.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/components/cc-bar-chart.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/components/cc-line-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext/components\');\n    test(\'ember-cli-esnext/components/cc-line-chart.js should pass jshint\', function() { \n      ok(false, \'ember-cli-esnext/components/cc-line-chart.js should pass jshint.\\nember-cli-esnext/components/cc-line-chart.js: line 35, col 46, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/components/cc-line-chart.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/components/cc-pd-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext/components\');\n    test(\'ember-cli-esnext/components/cc-pd-chart.js should pass jshint\', function() { \n      ok(false, \'ember-cli-esnext/components/cc-pd-chart.js should pass jshint.\\nember-cli-esnext/components/cc-pd-chart.js: line 84, col 109, Expected an assignment or function call and instead saw an expression.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/components/cc-pd-chart.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/helpers/bar_line_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext/helpers\');\n    test(\'ember-cli-esnext/helpers/bar_line_mixin.js should pass jshint\', function() { \n      ok(false, \'ember-cli-esnext/helpers/bar_line_mixin.js should pass jshint.\\nember-cli-esnext/helpers/bar_line_mixin.js: line 15, col 80, Expected an assignment or function call and instead saw an expression.\\nember-cli-esnext/helpers/bar_line_mixin.js: line 17, col 149, Expected an assignment or function call and instead saw an expression.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/helpers/bar_line_mixin.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/helpers/chart_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext/helpers\');\n    test(\'ember-cli-esnext/helpers/chart_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/helpers/chart_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/helpers/chart_mixin.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/helpers/options_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext/helpers\');\n    test(\'ember-cli-esnext/helpers/options_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/helpers/options_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/helpers/options_mixin.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/components/cc-bar-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/components\');\n    test(\'ember-data/components/cc-bar-chart.js should pass jshint\', function() { \n      ok(true, \'ember-data/components/cc-bar-chart.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/components/cc-bar-chart.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/components/cc-line-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/components\');\n    test(\'ember-data/components/cc-line-chart.js should pass jshint\', function() { \n      ok(false, \'ember-data/components/cc-line-chart.js should pass jshint.\\nember-data/components/cc-line-chart.js: line 35, col 46, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/components/cc-line-chart.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/components/cc-pd-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/components\');\n    test(\'ember-data/components/cc-pd-chart.js should pass jshint\', function() { \n      ok(false, \'ember-data/components/cc-pd-chart.js should pass jshint.\\nember-data/components/cc-pd-chart.js: line 84, col 109, Expected an assignment or function call and instead saw an expression.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/components/cc-pd-chart.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/helpers/bar_line_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/helpers\');\n    test(\'ember-data/helpers/bar_line_mixin.js should pass jshint\', function() { \n      ok(false, \'ember-data/helpers/bar_line_mixin.js should pass jshint.\\nember-data/helpers/bar_line_mixin.js: line 15, col 80, Expected an assignment or function call and instead saw an expression.\\nember-data/helpers/bar_line_mixin.js: line 17, col 149, Expected an assignment or function call and instead saw an expression.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/helpers/bar_line_mixin.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/helpers/chart_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/helpers\');\n    test(\'ember-data/helpers/chart_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-data/helpers/chart_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/helpers/chart_mixin.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/helpers/options_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/helpers\');\n    test(\'ember-data/helpers/options_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-data/helpers/options_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/helpers/options_mixin.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/components/cc-bar-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/components\');\n    test(\'ember-export-application-global/components/cc-bar-chart.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/components/cc-bar-chart.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/components/cc-bar-chart.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/components/cc-line-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/components\');\n    test(\'ember-export-application-global/components/cc-line-chart.js should pass jshint\', function() { \n      ok(false, \'ember-export-application-global/components/cc-line-chart.js should pass jshint.\\nember-export-application-global/components/cc-line-chart.js: line 35, col 46, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/components/cc-line-chart.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/components/cc-pd-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/components\');\n    test(\'ember-export-application-global/components/cc-pd-chart.js should pass jshint\', function() { \n      ok(false, \'ember-export-application-global/components/cc-pd-chart.js should pass jshint.\\nember-export-application-global/components/cc-pd-chart.js: line 84, col 109, Expected an assignment or function call and instead saw an expression.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/components/cc-pd-chart.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/helpers/bar_line_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/helpers\');\n    test(\'ember-export-application-global/helpers/bar_line_mixin.js should pass jshint\', function() { \n      ok(false, \'ember-export-application-global/helpers/bar_line_mixin.js should pass jshint.\\nember-export-application-global/helpers/bar_line_mixin.js: line 15, col 80, Expected an assignment or function call and instead saw an expression.\\nember-export-application-global/helpers/bar_line_mixin.js: line 17, col 149, Expected an assignment or function call and instead saw an expression.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/helpers/bar_line_mixin.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/helpers/chart_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/helpers\');\n    test(\'ember-export-application-global/helpers/chart_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/helpers/chart_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/helpers/chart_mixin.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/helpers/options_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/helpers\');\n    test(\'ember-export-application-global/helpers/options_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/helpers/options_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/helpers/options_mixin.jshint.js");

;eval("define(\"dummy/ember-idx-charts/tests/ember-idx-charts/components/cc-bar-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-charts/components\');\n    test(\'ember-idx-charts/components/cc-bar-chart.js should pass jshint\', function() { \n      ok(true, \'ember-idx-charts/components/cc-bar-chart.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-charts/tests/ember-idx-charts/components/cc-bar-chart.jshint.js");

;eval("define(\"dummy/ember-idx-charts/tests/ember-idx-charts/components/cc-line-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-charts/components\');\n    test(\'ember-idx-charts/components/cc-line-chart.js should pass jshint\', function() { \n      ok(false, \'ember-idx-charts/components/cc-line-chart.js should pass jshint.\\nember-idx-charts/components/cc-line-chart.js: line 35, col 46, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/ember-idx-charts/tests/ember-idx-charts/components/cc-line-chart.jshint.js");

;eval("define(\"dummy/ember-idx-charts/tests/ember-idx-charts/components/cc-pd-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-charts/components\');\n    test(\'ember-idx-charts/components/cc-pd-chart.js should pass jshint\', function() { \n      ok(false, \'ember-idx-charts/components/cc-pd-chart.js should pass jshint.\\nember-idx-charts/components/cc-pd-chart.js: line 84, col 109, Expected an assignment or function call and instead saw an expression.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/ember-idx-charts/tests/ember-idx-charts/components/cc-pd-chart.jshint.js");

;eval("define(\"dummy/ember-idx-charts/tests/ember-idx-charts/helpers/bar_line_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-charts/helpers\');\n    test(\'ember-idx-charts/helpers/bar_line_mixin.js should pass jshint\', function() { \n      ok(false, \'ember-idx-charts/helpers/bar_line_mixin.js should pass jshint.\\nember-idx-charts/helpers/bar_line_mixin.js: line 15, col 80, Expected an assignment or function call and instead saw an expression.\\nember-idx-charts/helpers/bar_line_mixin.js: line 17, col 149, Expected an assignment or function call and instead saw an expression.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=dummy/ember-idx-charts/tests/ember-idx-charts/helpers/bar_line_mixin.jshint.js");

;eval("define(\"dummy/ember-idx-charts/tests/ember-idx-charts/helpers/chart_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-charts/helpers\');\n    test(\'ember-idx-charts/helpers/chart_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-idx-charts/helpers/chart_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-charts/tests/ember-idx-charts/helpers/chart_mixin.jshint.js");

;eval("define(\"dummy/ember-idx-charts/tests/ember-idx-charts/helpers/options_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-charts/helpers\');\n    test(\'ember-idx-charts/helpers/options_mixin.js should pass jshint\', function() { \n      ok(true, \'ember-idx-charts/helpers/options_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-charts/tests/ember-idx-charts/helpers/options_mixin.jshint.js");

;eval("define(\"dummy/initializers/export-application-global\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=dummy/initializers/export-application-global.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/components/cc-bar-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/components\');\n    test(\'live-reload-middleware/components/cc-bar-chart.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/components/cc-bar-chart.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/components/cc-bar-chart.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/components/cc-line-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/components\');\n    test(\'live-reload-middleware/components/cc-line-chart.js should pass jshint\', function() { \n      ok(false, \'live-reload-middleware/components/cc-line-chart.js should pass jshint.\\nlive-reload-middleware/components/cc-line-chart.js: line 35, col 46, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/components/cc-line-chart.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/components/cc-pd-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/components\');\n    test(\'live-reload-middleware/components/cc-pd-chart.js should pass jshint\', function() { \n      ok(false, \'live-reload-middleware/components/cc-pd-chart.js should pass jshint.\\nlive-reload-middleware/components/cc-pd-chart.js: line 84, col 109, Expected an assignment or function call and instead saw an expression.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/components/cc-pd-chart.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/helpers/bar_line_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/helpers\');\n    test(\'live-reload-middleware/helpers/bar_line_mixin.js should pass jshint\', function() { \n      ok(false, \'live-reload-middleware/helpers/bar_line_mixin.js should pass jshint.\\nlive-reload-middleware/helpers/bar_line_mixin.js: line 15, col 80, Expected an assignment or function call and instead saw an expression.\\nlive-reload-middleware/helpers/bar_line_mixin.js: line 17, col 149, Expected an assignment or function call and instead saw an expression.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/helpers/bar_line_mixin.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/helpers/chart_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/helpers\');\n    test(\'live-reload-middleware/helpers/chart_mixin.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/helpers/chart_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/helpers/chart_mixin.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/helpers/options_mixin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/helpers\');\n    test(\'live-reload-middleware/helpers/options_mixin.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/helpers/options_mixin.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/helpers/options_mixin.jshint.js");

;eval("define(\"dummy/router\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n        this.resource(\'charts\', function() {});\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=dummy/router.js");

;eval("define(\"dummy/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<h2 id=\'title\'>Welcome to Ember-Idx-Charts</h2>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/application.js");

;eval("define(\"dummy/templates/charts/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <span>\");\n      stack1 = helpers._triageMustache.call(depth0, \"pClicked\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n    \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <span>\");\n      stack1 = helpers._triageMustache.call(depth0, \"bClicked\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n    \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <span>\");\n      stack1 = helpers._triageMustache.call(depth0, \"lClicked\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div>\\n    <div>\\n        <h3>Pie/Doughnut Chart & Update</h3>\\n        <form>\\n            Red: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"redValue\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n            Green: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"greenValue\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n            Blue: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"blueValue\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n            NewSegment: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"extraData1\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n            Pie?: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"isPie\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n            animateRotate: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"animateRotate\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n            segmentShowStroke: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"segmentShowStroke\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n            animateScale: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"animateScale\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n            <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"rerender\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Re Render Chart</button>\\n        </form>\\n    </div>\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers[\'cc-pd-chart\'] || (depth0 && depth0[\'cc-pd-chart\']),options={hash:{\n        \'data\': (\"cakeData\"),\n        \'isPie\': (\"isPie\"),\n        \'width\': (200),\n        \'height\': (200),\n        \'legend\': (true),\n        \'animateRotate\': (\"animateRotate\"),\n        \'segmentShowStroke\': (\"segmentShowStroke\"),\n        \'animateScale\': (\"animateScale\"),\n        \'reRender\': (\"reRender\"),\n        \'onClick\': (\"clickPie\")\n      },hashTypes:{\'data\': \"ID\",\'isPie\': \"ID\",\'width\': \"INTEGER\",\'height\': \"INTEGER\",\'legend\': \"BOOLEAN\",\'animateRotate\': \"ID\",\'segmentShowStroke\': \"ID\",\'animateScale\': \"ID\",\'reRender\': \"ID\",\'onClick\': \"STRING\"},hashContexts:{\'data\': depth0,\'isPie\': depth0,\'width\': depth0,\'height\': depth0,\'legend\': depth0,\'animateRotate\': depth0,\'segmentShowStroke\': depth0,\'animateScale\': depth0,\'reRender\': depth0,\'onClick\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"cc-pd-chart\", options))));\n      data.buffer.push(\"\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"pClicked\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div><br><br>\\n\\n<div>\\n    <h3>Bar Chart & Update</h3>\\n    <div>\\n        January: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"jan\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        February: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"feb\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        March: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"mar\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        April: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"apr\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        May: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"may\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        June: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"jun\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        July: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"jul\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        August: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"aug\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"<br>\\n        Label for blue dataset: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"label1\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        Label for red dataset: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"label2\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        barDatasetSpacing: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"number\"),\n        \'value\': (\"barDatasetSpacing\")\n      },hashTypes:{\'type\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'type\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        scaleShowGridLines: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"scaleShowGridLines\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"rerender\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Re Render Chart</button>\\n    </div>\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers[\'cc-bar-chart\'] || (depth0 && depth0[\'cc-bar-chart\']),options={hash:{\n        \'data\': (\"barData\"),\n        \'width\': (700),\n        \'height\': (400),\n        \'scaleShowGridLines\': (\"scaleShowGridLines\"),\n        \'barDatasetSpacing\': (\"barDatasetSpacing\"),\n        \'reRender\': (\"reRender\"),\n        \'legend\': (true),\n        \'onClick\': (\"clickBar\")\n      },hashTypes:{\'data\': \"ID\",\'width\': \"INTEGER\",\'height\': \"INTEGER\",\'scaleShowGridLines\': \"ID\",\'barDatasetSpacing\': \"ID\",\'reRender\': \"ID\",\'legend\': \"BOOLEAN\",\'onClick\': \"STRING\"},hashContexts:{\'data\': depth0,\'width\': depth0,\'height\': depth0,\'scaleShowGridLines\': depth0,\'barDatasetSpacing\': depth0,\'reRender\': depth0,\'legend\': depth0,\'onClick\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"cc-bar-chart\", options))));\n      data.buffer.push(\"\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"bClicked\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div><br><br>\\n\\n<div>\\n    <h3>Line Chart & Update</h3>\\n    <div>\\n        January: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"janline\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        February: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"febline\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        March: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"marline\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        April: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"aprline\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        May: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"mayline\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        June: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"junline\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        July: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"julline\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        August: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"augline\"),\n        \'type\': (\"number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"<br>\\n        Label for blue dataset: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"label3\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        Label for red dataset: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"label4\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        scaleShowGridLines: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"scaleShowGridLines\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        pointDot: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"pointDot\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        datasetFill: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"datasetFill\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"rerender\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Re Render Chart</button>\\n    </div>\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers[\'cc-line-chart\'] || (depth0 && depth0[\'cc-line-chart\']),options={hash:{\n        \'data\': (\"lineData\"),\n        \'width\': (700),\n        \'height\': (400),\n        \'scaleShowGridLines\': (\"scaleShowGridLines\"),\n        \'pointDot\': (\"pointDot\"),\n        \'datasetFill\': (\"datasetFill\"),\n        \'reRender\': (\"reRender\"),\n        \'legend\': (true),\n        \'onClick\': (\"clickLine\")\n      },hashTypes:{\'data\': \"ID\",\'width\': \"INTEGER\",\'height\': \"INTEGER\",\'scaleShowGridLines\': \"ID\",\'pointDot\': \"ID\",\'datasetFill\': \"ID\",\'reRender\': \"ID\",\'legend\': \"BOOLEAN\",\'onClick\': \"STRING\"},hashContexts:{\'data\': depth0,\'width\': depth0,\'height\': depth0,\'scaleShowGridLines\': depth0,\'pointDot\': depth0,\'datasetFill\': depth0,\'reRender\': depth0,\'legend\': depth0,\'onClick\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"cc-line-chart\", options))));\n      data.buffer.push(\"\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"lClicked\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/charts/index.js");

;eval("define(\"dummy/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/app.jshint.js");

;eval("define(\"dummy/tests/controllers/charts/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/charts\');\n    test(\'controllers/charts/index.js should pass jshint\', function() { \n      ok(true, \'controllers/charts/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/charts/index.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/resolver.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/start-app.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests\');\n    test(\'dummy/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/test-helper.jshint.js");

;eval("define(\"dummy/tests/helpers/resolver\", \n  [\"ember/resolver\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=dummy/tests/helpers/resolver.js");

;eval("define(\"dummy/tests/helpers/start-app\", \n  [\"ember\",\"dummy/app\",\"dummy/router\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      return App;\n    }\n  });//# sourceURL=dummy/tests/helpers/start-app.js");

;eval("define(\"dummy/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/router.jshint.js");

;eval("define(\"dummy/tests/test-helper\", \n  [\"dummy/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=dummy/tests/test-helper.js");

/* jshint ignore:start */

define('dummy/config/environment', ['ember'], function(Ember) {
  var prefix = 'dummy';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require("dummy/tests/test-helper");
} else {
  require("dummy/app")["default"].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}



/* jshint ignore:end */
