eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/as-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit\');\n    test(\'ember-cli-qunit/as-item.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/as-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/as-item.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit\');\n    test(\'ember-cli-qunit/list-item.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/list-item.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit\');\n    test(\'ember-cli-qunit/list.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/list.jshint.js");

;eval("define(\"dummy/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.FixtureAdapter.extend();\n  });//# sourceURL=dummy/adapters/application.js");

;eval("define(\"dummy/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=dummy/app.js");

;eval("define(\"dummy/components/em-list-item\", \n  [\"ember-idx-list/list-item\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ListItemComponent = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = ListItemComponent;\n  });//# sourceURL=dummy/components/em-list-item.js");

;eval("define(\"dummy/components/em-list\", \n  [\"ember-idx-list/list\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ListComponent = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = ListComponent;\n  });//# sourceURL=dummy/components/em-list.js");

;eval("define(\"dummy/controllers/models\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Em.ArrayController.extend({\n      actions: {\n        editModelChanged: function(editItem, models) {\n          return editItem.set(\'disabled\', models.length === 1 ? void 0 : \'disabled\');\n        },\n        deleteModelChanged: function(deleteItem, models) {\n          return deleteItem.set(\'disabled\', models.length > 0 ? void 0 : \'disabled\');\n        }\n      },\n      checked: (function() {\n        return this.filterBy(\'checked\', true);\n      }).property(\'@each.checked\')\n    });\n  });//# sourceURL=dummy/controllers/models.js");

;eval("define(\"dummy/controllers/sidebar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Em.ArrayController.extend({\n      needs: [\'application\'],\n      model: [\n        {route: \'gettingstarted\', text: \'Getting Started\'},\n        {route: \'simple\', text: \'Simple\'},\n        {route: \'state\', text: \'State\'},\n        {route: \'models\', text: \'Bound to Models\'}\n      ]\n    });\n  });//# sourceURL=dummy/controllers/sidebar.js");

;eval("define(\"dummy/controllers/state\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Em.ObjectController.extend({\n      message: \'Push the \"World\" button.\',\n      actions: {\n        worldSelected: function(item) {\n          return this.set(\'message\', \"\" + item.name + \" selected, now click Hello\");\n        },\n        worldDeselected: function(item) {\n          return this.set(\'message\', \"\" + item.name + \" was de-selected, now click World\");\n        },\n        helloState: function(helloItem, otherItem) {\n          if (otherItem.name === \'W\') {\n            return helloItem.set(\'disabled\', \'disabled\');\n          }\n        }\n      }\n    });\n  });//# sourceURL=dummy/controllers/state.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/as-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy\');\n    test(\'ember-cli-content-security-policy/as-item.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/as-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/as-item.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy\');\n    test(\'ember-cli-content-security-policy/list-item.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/list-item.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy\');\n    test(\'ember-cli-content-security-policy/list.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/list.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/as-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext\');\n    test(\'ember-cli-esnext/as-item.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/as-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/as-item.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext\');\n    test(\'ember-cli-esnext/list-item.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/list-item.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext\');\n    test(\'ember-cli-esnext/list.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/list.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/as-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data\');\n    test(\'ember-data/as-item.js should pass jshint\', function() { \n      ok(true, \'ember-data/as-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/as-item.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data\');\n    test(\'ember-data/list-item.js should pass jshint\', function() { \n      ok(true, \'ember-data/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/list-item.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data\');\n    test(\'ember-data/list.js should pass jshint\', function() { \n      ok(true, \'ember-data/list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/list.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/as-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global\');\n    test(\'ember-export-application-global/as-item.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/as-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/as-item.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global\');\n    test(\'ember-export-application-global/list-item.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/list-item.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global\');\n    test(\'ember-export-application-global/list.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/list.jshint.js");

;eval("define(\"dummy/ember-idx-list/tests/ember-idx-list/as-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-list\');\n    test(\'ember-idx-list/as-item.js should pass jshint\', function() { \n      ok(true, \'ember-idx-list/as-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-list/tests/ember-idx-list/as-item.jshint.js");

;eval("define(\"dummy/ember-idx-list/tests/ember-idx-list/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-list\');\n    test(\'ember-idx-list/list-item.js should pass jshint\', function() { \n      ok(true, \'ember-idx-list/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-list/tests/ember-idx-list/list-item.jshint.js");

;eval("define(\"dummy/ember-idx-list/tests/ember-idx-list/list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-list\');\n    test(\'ember-idx-list/list.js should pass jshint\', function() { \n      ok(true, \'ember-idx-list/list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-list/tests/ember-idx-list/list.jshint.js");

;eval("define(\"dummy/ember-idx-utils/tests/ember-idx-utils/as-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-utils\');\n    test(\'ember-idx-utils/as-item.js should pass jshint\', function() { \n      ok(true, \'ember-idx-utils/as-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-utils/tests/ember-idx-utils/as-item.jshint.js");

;eval("define(\"dummy/ember-idx-utils/tests/ember-idx-utils/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-utils\');\n    test(\'ember-idx-utils/list-item.js should pass jshint\', function() { \n      ok(true, \'ember-idx-utils/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-utils/tests/ember-idx-utils/list-item.jshint.js");

;eval("define(\"dummy/ember-idx-utils/tests/ember-idx-utils/list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-utils\');\n    test(\'ember-idx-utils/list.js should pass jshint\', function() { \n      ok(true, \'ember-idx-utils/list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-utils/tests/ember-idx-utils/list.jshint.js");

;eval("define(\"dummy/initializers/em-idx-list\", \n  [\"ember\",\"ember-idx-utils/config\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    var Config = __dependency2__[\"default\"];__exports__[\"default\"] = {\n      name: \'ember-idx-list\',\n      initialize: function() {\n        if (!Em.Config) {\n            Em.Config = Config = Config.create()\n        }\n      }\n    };\n  });//# sourceURL=dummy/initializers/em-idx-list.js");

;eval("define(\"dummy/initializers/export-application-global\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=dummy/initializers/export-application-global.js");

;eval("define(\"dummy/initializers/highlight\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    /*global hljs*/\n\n    __exports__[\"default\"] = {\n      name: \'hightlightjs\',\n      initialize: function() {\n        return Em.Route.reopen({\n          renderTemplate: function() {\n            this._super();\n            return Em.run.next(this, function() {\n              return $(\'pre code\').each(function(i, e) {\n                return hljs.highlightBlock(e);\n              });\n            });\n          }\n        });\n      }\n    };\n  });//# sourceURL=dummy/initializers/highlight.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/as-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware\');\n    test(\'live-reload-middleware/as-item.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/as-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/as-item.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware\');\n    test(\'live-reload-middleware/list-item.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/list-item.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware\');\n    test(\'live-reload-middleware/list.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/list.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/list.jshint.js");

;eval("define(\"dummy/models/tag\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var Tag = DS.Model.extend({\n      title: DS.attr(\'string\'),\n      children: DS.hasMany(\'tag\', {\n        async: true, inverse: \'parent\'\n      }),\n      parent: DS.belongsTo(\'tag\', {async: true, inverse: \'children\'})\n    });\n\n    __exports__[\"default\"] = Tag.reopenClass({\n      FIXTURES: [\n        {\n          id: 1,\n          title: \'Family\',\n          children: [10, 11]\n        }, {\n          id: 10,\n          title: \'Susan\',\n          parent: 1,\n          children: [100, 101]\n        }, {\n          id: 11,\n          title: \'Luda\',\n          parent: 1,\n          children: [102, 103]\n        }, {\n          id: 100,\n          title: \'Josh\',\n          parent: 10,\n          children: [1000]\n        }, {\n          id: 101,\n          title: \'Moses\',\n          parent: 10,\n          children: [1001]\n        }, {\n          id: 102,\n          title: \'Verdi\',\n          parent: 11,\n          children: [1002]\n        }, {\n          id: 103,\n          title: \'Gaya\',\n          parent: 11,\n          children: []\n        }, {\n          id: 1000,\n          title: \'Zuares\',\n          parent: 100,\n          children: []\n        }, {\n          id: 1001,\n          title: \'Romen\',\n          parent: 101,\n          children: []\n        }, {\n          id: 1002,\n          title: \'Flole\',\n          parent: 102,\n          children: []\n        }\n      ]\n    });\n  });//# sourceURL=dummy/models/tag.js");

;eval("define(\"dummy/router\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n        this.route( \'gettingstarted\' );\n        this.route( \'simple\' );\n        this.route( \'state\' );\n        this.route( \'models\' );\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=dummy/router.js");

;eval("define(\"dummy/routes/models\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Em.Route.extend({\n      model: function() {\n        return this.store.find(\'tag\');\n      }\n    });\n  });//# sourceURL=dummy/routes/models.js");

;eval("define(\"dummy/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar\", options) : helperMissing.call(depth0, \"render\", \"navbar\", options))));\n      data.buffer.push(\"\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3 col-xs-12\\\">\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"sidebar\", options) : helperMissing.call(depth0, \"render\", \"sidebar\", options))));\n      data.buffer.push(\"\\n        </div>\\n        <div class=\\\"col-sm-9 col-xs-12 page\\\">\\n            \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </div>\\n    </div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/application.js");

;eval("define(\"dummy/templates/gettingstarted\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Simple\");\n      }\n\n      data.buffer.push(\"<h1>Getting Started</h1>\\n\\n<p>\\n    <i>Ember-Idx-List</i> is a multi panels defined with 1 single planel selected at a time rendered as an list.\\n</p>\\n\\n<p>\\n    <i>Ember-Idx-List</i> is an Ember CLI module and can be simply installed by:\\n</p>\\n\\n<p>\\n<ol>\\n    <li>\\n        <pre><code class=\\\"bash\\\">npm install --save-dev ember-idx-list</code></pre>\\n    </li>\\n</ol>\\n</p>\\n\\n<p>Want to see some code? check out the \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"simple\", options) : helperMissing.call(depth0, \"link-to\", \"simple\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" page</p>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/gettingstarted.js");

;eval("define(\"dummy/templates/models\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'a\': (\"A\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'a\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'a\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'on-model-change\': (\"editModelChanged\"),\n        \'a\': (\"E\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'on-model-change\': \"STRING\",\'a\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'on-model-change\': depth0,\'a\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'on-model-change\': (\"deleteModelChanged\"),\n        \'a\': (\"D\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'on-model-change\': \"STRING\",\'a\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'on-model-change\': depth0,\'a\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"Add\");\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"Edit\");\n      }\n\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\"Delete\");\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        <tr>\\n            <td>\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"checked\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n        </tr>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>List with models</h1>\\n\\n<p>\\nThink of a scenario when there\'s a need of a toolbar of items (rendered as buttons) and a table of models beneath it with selection support,\\nnow items in the toolbar should change their state according to the model selection in the table.\\n\\nFor example an \'Edit\' button may be disabled unless there is exactly 1 selected model, or a \'Delete\' button may be enabled only when there is one or more selected items.\\n\\nIn the template, only 1 expression is needed, the content property is expected to be an array of array, where each array represents a section in the action bar and contains objects that represent a button defintion in the bar, the selectedItems property is expected to be an array of the currently selected items on a list.\\n\\nTo achieve this you need to set up two properties:\\n<ol>\\n<li>Set <i>models</i> property on the <i>{{em-list}}</i> tag and bind it to the models selection, this can be an array of models or a single model.</li>\\n<li>Set <i>on-model-change</i> property on the <i>{{em-list-item}}</i> tag and bind it to an action in the controller, the action will be invoked when the <i>models</i> (bound to the list) property changes.</li>\\n</ol>\\n\\n<h2>Demo</h2>\\n\\n<p>\\nThis demo demonstrate the following logic:\\n<ol>\\n<li><i>Add</i> button is always enabled.</li>\\n<li><i>Edit</i> button is enabled only if exactly 1 item is selected.</li>\\n<li><i>Delete</i> button is enabled only if there is 1 or more items selected items.</li>\\n</ol>\\n</p>\\n\\n<p>\\n\");\n      stack1 = (helper = helpers[\'em-list\'] || (depth0 && depth0[\'em-list\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'selectedClass\': (\"active\"),\n        \'class\': (\"btn-group\"),\n        \'models\': (\"checked\")\n      },hashTypes:{\'tagName\': \"STRING\",\'selectedClass\': \"STRING\",\'class\': \"STRING\",\'models\': \"ID\"},hashContexts:{\'tagName\': depth0,\'selectedClass\': depth0,\'class\': depth0,\'models\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</p>\\n<p>\\n<table class=\\\"table\\\" style=\\\"width: 30%\\\">\\n<tr><th width=\\\"10%\\\">Select</th><th>Title</th></tr>\\n    \");\n      stack1 = helpers.each.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</table>\\n</p>\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">{{#em-list tagName=\\\"div\\\" selectedClass=\\\"active\\\" class=\\\"btn-group\\\" models=checked}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" a=\\\"A\\\"}}Add{{/em-list-item}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" on-model-change=\\\"editModelChanged\\\" a=\\\"E\\\"}}Edit{{/em-list-item}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" on-model-change=\\\"deleteModelChanged\\\" a=\\\"D\\\"}}Delete{{/em-list-item}}\\n{{/em-list}}</code></pre>\\n</div>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"coffeescript\\\">Ember.ArrayController.extend\\n    actions:\\n        editModelChanged: (editItem, models) ->\\n            editItem.set \'disabled\', if models.length is 1 then undefined else \'disabled\'\\n        deleteModelChanged: (deleteItem, models) ->\\n            deleteItem.set \'disabled\', if models.length > 0 then undefined else \'disabled\'\\n\\n\\n    checked: (->\\n        return this.filterBy(\'checked\', true)\\n    ).property(\'@each.checked\')</code></pre>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/models.js");

;eval("define(\"dummy/templates/navbar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<nav role=\\\"navigation\\\" class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"buttonin\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\" class=\\\"navbar-toggle\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Ember Idx List</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li class=\\\"active\\\">\\n                    <a href=\\\"#\\\">\\n                        <i class=\\\"fa fa-home\\\"></i>\\n                        Home\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"https://github.com/indexiatech/ember-idx-list\\\">\\n                        <i class=\\\"fa fa-github-alt\\\"></i>\\n                        Github\\n                    </a>\\n                </li>\\n            </ul>\\n            <form class=\\\"navbar-form navbar-right\\\">\\n                <a href=\\\"https://github.com/indexiatech/ember-idx-list/archive/master.zip\\\" style=\\\"font-weight:bold\\\" class=\\\"btn btn-success\\\">\\n                    <i class=\\\"fa fa-save\\\"></i>\\n                    Download 1~ kb\\n                </a>\\n            </form>\\n            <div class=\\\"socials\\\" style=\\\"text-align: center\\\">\\n                <ul class=\\\"bs-social-buttons\\\">\\n                    <li>\\n                        <!-- github -->\\n                        <div>\\n                        <iframe class=\\\"github-btn\\\" src=\\\"http://ghbtns.com/github-btn.html?user=indexiatech&amp;repo=ember-idx-list&amp;type=watch&amp;count=true\\\" width=\\\"100\\\" height=\\\"20\\\" title=\\\"Star on GitHub\\\"></iframe>\\n                        </div>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</nav>\");\n      \n    });\n  });//# sourceURL=dummy/templates/navbar.js");

;eval("define(\"dummy/templates/sidebar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"route\", options) : helperMissing.call(depth0, \"link-to\", \"route\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n            <ul class=\\\"nav\\\">\\n            \");\n      stack1 = helpers.each.call(depth0, \"items\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            </ul>\\n        \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"route\", options) : helperMissing.call(depth0, \"link-to\", \"route\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n            \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"well sidebar\\\">\\n    <ul class=\\\"nav\\\">\\n        \");\n      stack1 = helpers.each.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </ul>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/sidebar.js");

;eval("define(\"dummy/templates/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-list-item\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-list-item\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-list-item\']) { stack1 = blockHelperMissing.call(depth0, \'em-list-item\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-list-item\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-list-item\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-list-item\']) { stack1 = blockHelperMissing.call(depth0, \'em-list-item\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"Hello\");\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"World\");\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"a\"),\n        \'class\': (\"list-group-item\"),\n        \'u\': (\"HELLO\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'u\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'u\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"a\"),\n        \'class\': (\"list-group-item\"),\n        \'u\': (\"WORLD\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'u\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'u\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <p>Selected item is: \");\n      stack1 = helpers._triageMustache.call(depth0, \"s.u\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"<p>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Simple List</h1>\\n\\n<p>\\nA list is a collection of items, the default form a list is rendered as <i>&lt;ul&gt;</i> tag where each item is rendered as an <i>&lt;li&gt;</i> tag, simple isnt it? But lists are more sophisticated from the first glance, here are some of their features:\\n</p>\\n\\n<p>\\n    <ul>\\n        <li>Items can be selected.</li>\\n        <li>A selected item recieves a css class.</li>\\n        <li>The controller can bind its own property as the selected item.</li>\\n        <li>When an item is selected, all items get notified to react upon the selection.</li>\\n        <li>It\'s possible to bind a model to the list, when model changes, all items recieves the change can react.</li>\\n    </ul>\\n</p>\\n\\n<h3>Demo</h3>\\n\\n\");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'em-list\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'em-list\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'em-list\']) { stack1 = blockHelperMissing.call(depth0, \'em-list\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h3>Markup</h3>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">{{#em-list}}\\n    {{#em-list-item}}Hello{{/em-list-item}}\\n    {{#em-list-item}}World{{/em-list-item}}\\n{{/em-list}}</code></pre>\\n</div>\\n\\n\\n<h1>Styles</h1>\\n\\n<p>\\nThe list and its items can be customized by getting rendered with different DOM tag and styels.\\n</p>\\n\\n\");\n      stack1 = (helper = helpers[\'em-list\'] || (depth0 && depth0[\'em-list\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"list-group\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n<h1>Selection</h1>\\n\\n<p>\\nA controller property can be bound as the selected item simply by binding the <i>selected</i> property of the <i>{{em-list}}</i> tag.\\n</p>\\n\\n\");\n      stack1 = (helper = helpers[\'em-list\'] || (depth0 && depth0[\'em-list\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"list-group\"),\n        \'selectedClass\': (\"active\"),\n        \'selected\': (\"s\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'selectedClass\': \"STRING\",\'selected\': \"ID\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'selectedClass\': depth0,\'selected\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"s\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h3>Markup</h3>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">{{#em-list tagName=\\\"div\\\" class=\\\"list-group\\\" selectedClass=\\\"active\\\" selected=s}}\\n    {{#em-list-item tagName=\\\"a\\\" class=\\\"list-group-item\\\" u=\\\"HELLO\\\"}}Hello{{/em-list-item}}\\n    {{#em-list-item tagName=\\\"a\\\" class=\\\"list-group-item\\\" u=\\\"WORLD\\\"}}World{{/em-list-item}}\\n{{/em-list}}\\n\\nSelected item is: {{s.u}}</code></pre></div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/simple.js");

;eval("define(\"dummy/templates/state\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'name\': (\"Hello\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'name\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'name\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'on-select\': (\"worldSelected\"),\n        \'on-deselect\': (\"worldDeselected\"),\n        \'name\': (\"World\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'on-select\': \"STRING\",\'on-deselect\': \"STRING\",\'name\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'on-select\': depth0,\'on-deselect\': depth0,\'name\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"Hello\");\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"World\");\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'on-selection-change\': (\"helloState\"),\n        \'name\': (\"H\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'on-selection-change\': \"STRING\",\'name\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'on-selection-change\': depth0,\'name\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'em-list-item\'] || (depth0 && depth0[\'em-list-item\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'class\': (\"btn btn-default\"),\n        \'name\': (\"W\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\",\'name\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0,\'name\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list-item\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Item Selection State</h1>\\n\\n<p>\\nItems within the list can notify the controller when they are selected or deselected.\\n\\nFor every <i>{{em-list-item}}</i> tag you can optionally define two properties to recieve events:\\n</p>\\n\\n<p>\\n<table class=\\\"table\\\">\\n<tr><th>Property Name</th><th>Action Params</th><th>Details</th></tr>\\n<tr><td>on-select</td><td>item - The selected item</td><td>The action in the controller to be invoked when the item was selected.</td></tr>\\n<tr><td>on-deselect</td><td>item - The deselected item</td><td>The action in the controller to be invoked when the item selection was removed.</td></tr>\\n</table>\\n\\n<h2>Demo</h2>\\n\\n<p>\\n\");\n      stack1 = (helper = helpers[\'em-list\'] || (depth0 && depth0[\'em-list\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'selectedClass\': (\"active\"),\n        \'class\': (\"btn-group\")\n      },hashTypes:{\'tagName\': \"STRING\",\'selectedClass\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'selectedClass\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</p>\\n\\n<p>\\nMessage: \");\n      stack1 = helpers._triageMustache.call(depth0, \"message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</p>\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">{{#em-list tagName=\\\"div\\\" selectedClass=\\\"active\\\" class=\\\"btn-group\\\"}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" name=\\\"Hello\\\"}}Hello{{/em-list-item}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" on-select=\\\"worldSelected\\\" on-deselect=\\\"worldDeselected\\\" name=\\\"World\\\"}}World{{/em-list-item}}\\n{{/em-list}}</code></pre>\\n</div>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"coffeescript\\\">Ember.ObjectController.extend\\n    message: \'Push the \\\"World\\\" button.\'\\n    actions:\\n        worldSelected: (item) ->\\n            @set \'message\', \\\"#{item.name} selected, now click Hello\\\"\\n\\n        worldDeselected: (item) ->\\n            @set \'message\', \\\"#{item.name} was de-selected, now click World\\\"\\n</code></pre>\\n</div>\\n\\n\\n<h1>Item Selection State</h1>\\n<p>\\nAn item can change its state based on the selection of another item, this can happen when binding a controller property to the <i>on-selection-change</i> on the <i>{{em-list-item}}</i> tag.\\n</p>\\n\\n<h2>Demo</h2>\\n<p>\\n\");\n      stack1 = (helper = helpers[\'em-list\'] || (depth0 && depth0[\'em-list\']),options={hash:{\n        \'tagName\': (\"div\"),\n        \'selectedClass\': (\"active\"),\n        \'class\': (\"btn-group\")\n      },hashTypes:{\'tagName\': \"STRING\",\'selectedClass\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'selectedClass\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-list\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</p>\\n\\n\\n<h2>Markup</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">{{#em-list tagName=\\\"div\\\" selectedClass=\\\"active\\\" class=\\\"btn-group\\\"}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" on-selection-change=\\\"helloState\\\" name=\\\"H\\\"}}Hello{{/em-list-item}}\\n    {{#em-list-item tagName=\\\"div\\\" class=\\\"btn btn-default\\\" name=\\\"W\\\"}}World{{/em-list-item}}\\n{{/em-list}}</code></pre>\\n</div>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"coffeescript\\\">Ember.ObjectController.extend\\n    message: \'Push the \\\"World\\\" button.\'\\n    actions:\\n        helloState: (helloItem, otherItem) ->\\n            if otherItem.name is \'W\'\\n                helloItem.set \'disabled\', \'disabled\'\\n</code></pre>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/state.js");

;eval("define(\"dummy/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(true, \'adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/adapters/application.jshint.js");

;eval("define(\"dummy/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/app.jshint.js");

;eval("define(\"dummy/tests/controllers/models.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/models.js should pass jshint\', function() { \n      ok(true, \'controllers/models.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/models.jshint.js");

;eval("define(\"dummy/tests/controllers/sidebar.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/sidebar.js should pass jshint\', function() { \n      ok(true, \'controllers/sidebar.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/sidebar.jshint.js");

;eval("define(\"dummy/tests/controllers/state.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/state.js should pass jshint\', function() { \n      ok(true, \'controllers/state.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/state.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/resolver.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/start-app.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests\');\n    test(\'dummy/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/test-helper.jshint.js");

;eval("define(\"dummy/tests/helpers/resolver\", \n  [\"ember/resolver\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=dummy/tests/helpers/resolver.js");

;eval("define(\"dummy/tests/helpers/start-app\", \n  [\"ember\",\"dummy/app\",\"dummy/router\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      return App;\n    }\n  });//# sourceURL=dummy/tests/helpers/start-app.js");

;eval("define(\"dummy/tests/initializers/highlight.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - initializers\');\n    test(\'initializers/highlight.js should pass jshint\', function() { \n      ok(true, \'initializers/highlight.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/initializers/highlight.jshint.js");

;eval("define(\"dummy/tests/models/tag.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/tag.js should pass jshint\', function() { \n      ok(true, \'models/tag.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/models/tag.jshint.js");

;eval("define(\"dummy/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/router.jshint.js");

;eval("define(\"dummy/tests/routes/models.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/models.js should pass jshint\', function() { \n      ok(true, \'routes/models.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/routes/models.jshint.js");

;eval("define(\"dummy/tests/test-helper\", \n  [\"dummy/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=dummy/tests/test-helper.js");

/* jshint ignore:start */

define('dummy/config/environment', ['ember'], function(Ember) {
  var prefix = 'dummy';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require("dummy/tests/test-helper");
} else {
  require("dummy/app")["default"].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}



/* jshint ignore:end */
