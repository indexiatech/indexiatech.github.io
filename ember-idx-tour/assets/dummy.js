eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/tour.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit\');\n    test(\'ember-cli-qunit/tour.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/tour.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/tour.jshint.js");

;eval("define(\"dummy/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=dummy/app.js");

;eval("define(\"dummy/components/em-tour\", \n  [\"ember-idx-tour/tour\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var TourComponent = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = TourComponent;\n  });//# sourceURL=dummy/components/em-tour.js");

;eval("define(\"dummy/controllers/sidebar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Em.ArrayController.extend({\n      needs: [\'application\'],\n      model: [\n        {route: \'gettingstarted\', text: \'Getting Started\'},\n        {route: \'simple\', text: \'Simple\'},\n        {route: \'api\', text: \'API\'}\n      ]\n    });\n  });//# sourceURL=dummy/controllers/sidebar.js");

;eval("define(\"dummy/controllers/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n    var set = Em.set;\n    var d = Em.debug;\n\n    __exports__[\"default\"] = Em.Controller.extend({\n        tourSteps1: [\n            {\n                element: \".step1\",\n                title: \"Title of my step\",\n                content: \"Content of my step\"\n            },\n            {\n                element: \".step2\",\n                title: \"Title of my step\",\n                content: \"Content of my step\"\n            }\n        ],\n\n        actions: {\n            start: function() {\n                this.set(\'startTour1\', true);\n            },\n\n            onShow: function() {\n                d(\'on-show invoked\');\n            },\n\n            onNext: function() {\n                d(\'on-next invoked\');\n            },\n\n            onPrev: function() {\n                d(\'on-prev invoked\');\n            },\n\n            onStart: function() {\n                d(\'on-start invoked\');\n            },\n\n            onEnd: function() {\n                d(\'on-end invoked\');\n            }\n        }\n    });\n  });//# sourceURL=dummy/controllers/simple.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/tour.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy\');\n    test(\'ember-cli-content-security-policy/tour.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/tour.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/tour.jshint.js");

;eval("define(\"dummy/ember-cli-esnext/tests/ember-cli-esnext/tour.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-esnext\');\n    test(\'ember-cli-esnext/tour.js should pass jshint\', function() { \n      ok(true, \'ember-cli-esnext/tour.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-esnext/tests/ember-cli-esnext/tour.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/tour.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data\');\n    test(\'ember-data/tour.js should pass jshint\', function() { \n      ok(true, \'ember-data/tour.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/tour.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/tour.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global\');\n    test(\'ember-export-application-global/tour.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/tour.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/tour.jshint.js");

;eval("define(\"dummy/ember-idx-tour/tests/ember-idx-tour/tour.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-idx-tour\');\n    test(\'ember-idx-tour/tour.js should pass jshint\', function() { \n      ok(true, \'ember-idx-tour/tour.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-idx-tour/tests/ember-idx-tour/tour.jshint.js");

;eval("define(\"dummy/initializers/export-application-global\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=dummy/initializers/export-application-global.js");

;eval("define(\"dummy/initializers/highlight\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Em = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name: \'hightlightjs\',\n      initialize: function() {\n        return Em.Route.reopen({\n          renderTemplate: function() {\n            this._super();\n            return Em.run.next(this, function() {\n              return $(\'pre code\').each(function(i, e) {\n                return hljs.highlightBlock(e);\n              });\n            });\n          }\n        });\n      }\n    };\n  });//# sourceURL=dummy/initializers/highlight.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/tour.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware\');\n    test(\'live-reload-middleware/tour.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/tour.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/tour.jshint.js");

;eval("define(\"dummy/router\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n        this.route( \'gettingstarted\' );\n        this.route( \'simple\' );\n        this.route( \'api\' );\n    });\n\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=dummy/router.js");

;eval("define(\"dummy/templates/api\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\';\n\n\n      data.buffer.push(\"<h1>{{em-tour}} API</h1>\\n\\n<h2>Component Attributes</h2>\\n<p>\\n<table class=\\\"table table-striped\\\">\\n    <tr><th>Param name</th><th>Description</th><th>Default</th></tr>\\n    <tr><td>name</td><td>The name of the tour</td><td>tour</td></tr>\\n    <tr><td>container</td><td>Appends the step popover to a specific element</td><td>body</td></tr>\\n    <tr><td>orphan</td><td>If true, steps bound to elements that do not exist will be rendered in the center of the window, otherwise step will be ignored</td><td>true</td></tr>\\n    <tr><td>backdrop</td><td>If true will display a dark backdrop behind the popover and its element but will highlight the current step.</td><td>true</td></tr>\\n    <tr><td>backdrop-padding</td><td>Add padding to the step being currently highligted</td><td>0</td></tr>\\n    <tr><td>steps</td><td>An array of objects representing the steps to be included in the tour.</td><td>[]</td></tr>\\n    <tr><td>start-if</td><td>The tour will start if set to true</td><td>none</td></tr>\\n</table>\\n</p>\\n\\n<h2>Component Actions</h2>\\n<p>\\n<table class=\\\"table table-striped\\\">\\n    <tr><th>Action Name </th><th>Description</th><th>Params</th></tr>\\n    <tr><td>on-start</td><td>The action to invoke when tour starts</td><td>Component, Tour, Step</td></tr>\\n    <tr><td>on-end</td><td>The action to invoke when tour ends</td><td>Component, Tour, Step</td></tr>\\n    <tr><td>on-show</td><td>The action to invoke before each step is shown</td><td>Component, Tour, Step</td></tr>\\n    <tr><td>on-shown</td><td>The action to invoke after each step is shown</td><td>Component, Tour, Step</td></tr>\\n    <tr><td>on-hide</td><td>The action to invoke before each step is hidden</td><td>Component, Tour, Step</td></tr>\\n    <tr><td>on-hidden</td><td>The action to invoke after each step is hidden</td><td>Component, Tour, Step</td></tr>\\n    <tr><td>on-next</td><td>The action to invoke when the next step is asked for</td><td>Component, Tour, Step</td></tr>\\n    <tr><td>on-prev</td><td>The action to invoke when the previous step is asked for</td><td>Component, Tour, Step</td></tr>\\n</table>\\n</p>\\n\\n<h2>Step</h2>\\n\\n<p>\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"javascript\\\">\\n    tourSteps1: [\\n        {\\n            element: \\\".elementId\\\", //Element the step is bound to, can be any jquery selector\\n            title: \\\"Title of my step\\\",\\n            content: \\\"Content of my step\\\",\\n            backdrop: true //can define backdrop per step\\n        }\\n    ]\\n    </code></pre>\\n</div>\\n</p>\\n\\n<p>\\nFor more info please see <a href=\\\"http://bootstraptour.com/api/\\\">Bootstrap Tour API</a>\\n</p>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/api.js");

;eval("define(\"dummy/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar\", options) : helperMissing.call(depth0, \"render\", \"navbar\", options))));\n      data.buffer.push(\"\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3 col-xs-12\\\">\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"sidebar\", options) : helperMissing.call(depth0, \"render\", \"sidebar\", options))));\n      data.buffer.push(\"\\n        </div>\\n        <div class=\\\"col-sm-9 col-xs-12 page\\\">\\n            \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </div>\\n    </div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/application.js");

;eval("define(\"dummy/templates/gettingstarted\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Simple\");\n      }\n\n      data.buffer.push(\"<h1>Getting Started</h1>\\n\\n<p>\\n<i>Ember Tour</i> is a tour addon for Ember, it let you create beatiful tour guides for you app,\\nIt is currently based on Bootstrap Tour but is planned to be rewritten the Ember way in the future.\\n</p>\\n\\n<p>\\n    <i>Ember Tour</i> is an Ember CLI module and can be simply installed by:\\n</p>\\n\\n<p>\\n<ol>\\n    <li>\\n        <pre><code class=\\\"bash\\\">npm install --save-dev ember-idx-tour</code></pre>\\n    </li>\\n</ol>\\n</p>\\n\\n<p>Want to see some code? check out the \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"simple\", options) : helperMissing.call(depth0, \"link-to\", \"simple\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" page</p>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/gettingstarted.js");

;eval("define(\"dummy/templates/navbar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<nav role=\\\"navigation\\\" class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"buttonin\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\" class=\\\"navbar-toggle\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Ember Idx Tour</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li class=\\\"active\\\">\\n                    <a href=\\\"#\\\">\\n                        <i class=\\\"fa fa-home\\\"></i>\\n                        Home\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"https://github.com/indexiatech/ember-idx-tour\\\">\\n                        <i class=\\\"fa fa-github-alt\\\"></i>\\n                        Github\\n                    </a>\\n                </li>\\n            </ul>\\n            <form class=\\\"navbar-form navbar-right\\\">\\n                <a href=\\\"https://github.com/indexiatech/ember-idx-tour/archive/master.zip\\\" style=\\\"font-weight:bold\\\" class=\\\"btn btn-success\\\">\\n                    <i class=\\\"fa fa-save\\\"></i>\\n                    Download 1~ kb\\n                </a>\\n            </form>\\n            <div class=\\\"socials\\\" style=\\\"text-align: center\\\">\\n                <ul class=\\\"bs-social-buttons\\\">\\n                    <li>\\n                        <!-- github -->\\n                        <div>\\n                        <iframe class=\\\"github-btn\\\" src=\\\"http://ghbtns.com/github-btn.html?user=indexiatech&amp;repo=ember-idx-tour&amp;type=watch&amp;count=true\\\" width=\\\"100\\\" height=\\\"20\\\" title=\\\"Star on GitHub\\\"></iframe>\\n                        </div>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</nav>\");\n      \n    });\n  });//# sourceURL=dummy/templates/navbar.js");

;eval("define(\"dummy/templates/sidebar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"route\", options) : helperMissing.call(depth0, \"link-to\", \"route\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n            <ul class=\\\"nav\\\">\\n            \");\n      stack1 = helpers.each.call(depth0, \"items\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            </ul>\\n        \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"route\", options) : helperMissing.call(depth0, \"link-to\", \"route\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n            \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"well sidebar\\\">\\n    <ul class=\\\"nav\\\">\\n        \");\n      stack1 = helpers.each.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </ul>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/sidebar.js");

;eval("define(\"dummy/templates/simple\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h2 id=\'title\'>Ember Idx Tour</h2>\\n\\n<div style=\\\"float: left;\\\">\\n    <div class=\\\"step1\\\">Step1</div>\\n    <div class=\\\"step2\\\">Step2</div>\\n</div>\\n\\n<br/><br/>\\n<p>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'em-tour\'] || (depth0 && depth0[\'em-tour\']),options={hash:{\n        \'steps\': (\"tourSteps1\"),\n        \'start-if\': (\"startTour1\"),\n        \'on-start\': (\"onStart\"),\n        \'on-show\': (\"onShow\"),\n        \'on-end\': (\"onEnd\"),\n        \'on-next\': (\"onNext\"),\n        \'on-rev\': (\"onPrev\")\n      },hashTypes:{\'steps\': \"ID\",\'start-if\': \"ID\",\'on-start\': \"STRING\",\'on-show\': \"STRING\",\'on-end\': \"STRING\",\'on-next\': \"STRING\",\'on-rev\': \"STRING\"},hashContexts:{\'steps\': depth0,\'start-if\': depth0,\'on-start\': depth0,\'on-show\': depth0,\'on-end\': depth0,\'on-next\': depth0,\'on-rev\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"em-tour\", options))));\n      data.buffer.push(\"\\n<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"start\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">start a tour!</button>\\n</p>\\n\\n<h2>Markup</h2>\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"handlebars\\\">\\n        &lt;div style=\\\"float: left;\\\"&gt;\\n            &lt;div class=\\\"step1\\\">Step1&lt;/div&gt;\\n            &lt;div class=\\\"step2\\\">Step2&lt;/div&gt;\\n        &lt;/div;&gt;\\n        {{em-tour steps=tourSteps1 start-if=startTour1 on-start=\\\"onStart\\\" on-show=\\\"onShow\\\" on-end=\\\"onEnd\\\" on-next=\\\"onNext\\\" on-rev=\\\"onPrev\\\"}}\\n    &lt;button {{action \'start\'}}&gt;start a tour!&lt;/button&gt;\\n    </code></pre>\\n</div>\\n\\n<h2>Controller</h2>\\n\\n<div class=\\\"well line-example\\\">\\n    <pre><code class=\\\"javascript\\\">\\nexport default Em.Controller.extend({\\n    tourSteps1: [\\n        {\\n            element: \\\".step1\\\",\\n            title: \\\"Title of my step\\\",\\n            content: \\\"Content of my step\\\"\\n        },\\n        {\\n            element: \\\".step2\\\",\\n            title: \\\"Title of my step\\\",\\n            content: \\\"Content of my step\\\"\\n        }\\n    ]\\n});\\n</code></pre></div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/simple.js");

;eval("define(\"dummy/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/app.jshint.js");

;eval("define(\"dummy/tests/controllers/sidebar.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/sidebar.js should pass jshint\', function() { \n      ok(true, \'controllers/sidebar.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/sidebar.jshint.js");

;eval("define(\"dummy/tests/controllers/simple.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/simple.js should pass jshint\', function() { \n      ok(true, \'controllers/simple.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/simple.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/resolver.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/start-app.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests\');\n    test(\'dummy/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/test-helper.jshint.js");

;eval("define(\"dummy/tests/helpers/resolver\", \n  [\"ember/resolver\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=dummy/tests/helpers/resolver.js");

;eval("define(\"dummy/tests/helpers/start-app\", \n  [\"ember\",\"dummy/app\",\"dummy/router\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      return App;\n    }\n  });//# sourceURL=dummy/tests/helpers/start-app.js");

;eval("define(\"dummy/tests/initializers/highlight.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - initializers\');\n    test(\'initializers/highlight.js should pass jshint\', function() { \n      ok(false, \'initializers/highlight.js should pass jshint.\\ninitializers/highlight.js: line 11, col 20, \\\'hljs\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=dummy/tests/initializers/highlight.jshint.js");

;eval("define(\"dummy/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/router.jshint.js");

;eval("define(\"dummy/tests/test-helper\", \n  [\"dummy/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=dummy/tests/test-helper.js");

/* jshint ignore:start */

define('dummy/config/environment', ['ember'], function(Ember) {
  var prefix = 'dummy';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require("dummy/tests/test-helper");
} else {
  require("dummy/app")["default"].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}



/* jshint ignore:end */
